import{i as d,t as _}from"./core-DucnQ6i4.js";var m;(function(n){n.WINDOW_RESIZED="tauri://resize",n.WINDOW_MOVED="tauri://move",n.WINDOW_CLOSE_REQUESTED="tauri://close-requested",n.WINDOW_DESTROYED="tauri://destroyed",n.WINDOW_FOCUS="tauri://focus",n.WINDOW_BLUR="tauri://blur",n.WINDOW_SCALE_FACTOR_CHANGED="tauri://scale-change",n.WINDOW_THEME_CHANGED="tauri://theme-changed",n.WINDOW_CREATED="tauri://window-created",n.WEBVIEW_CREATED="tauri://webview-created",n.DRAG_ENTER="tauri://drag-enter",n.DRAG_OVER="tauri://drag-over",n.DRAG_DROP="tauri://drag-drop",n.DRAG_LEAVE="tauri://drag-leave"})(m||(m={}));async function W(n,r){window.__TAURI_EVENT_PLUGIN_INTERNALS__.unregisterListener(n,r),await d("plugin:event|unlisten",{event:n,eventId:r})}async function b(n,r,c){var a;const o=(a=void 0)!==null&&a!==void 0?a:{kind:"Any"};return d("plugin:event|listen",{event:n,target:o,handler:_(r)}).then(e=>async()=>W(n,e))}var t;(function(n){n[n.Trace=1]="Trace",n[n.Debug=2]="Debug",n[n.Info=3]="Info",n[n.Warn=4]="Warn",n[n.Error=5]="Error"})(t||(t={}));function g(n){var r,c;if(n)if(n.startsWith("Error")){const o=(r=n.split(`
`)[3])==null?void 0:r.trim();if(!o)return;const e=/at\s+(?<functionName>.*?)\s+\((?<fileName>.*?):(?<lineNumber>\d+):(?<columnNumber>\d+)\)/,i=o.match(e);if(i){const{functionName:l,fileName:s,lineNumber:f,columnNumber:N}=i.groups;return`${l}@${s}:${f}:${N}`}else{const l=/at\s+(?<fileName>.*?):(?<lineNumber>\d+):(?<columnNumber>\d+)/,s=o.match(l);if(s){const{fileName:f,lineNumber:N,columnNumber:D}=s.groups;return`<anonymous>@${f}:${N}:${D}`}}}else return(c=n.split(`
`).map(e=>e.split("@")).filter(([e,i])=>e.length>0&&i!=="[native code]")[2])==null?void 0:c.filter(e=>e.length>0).join("@")}async function u(n,r,c){const a=g(new Error().stack),{file:o,line:e,keyValues:i}=c??{};await d("plugin:log|log",{level:n,message:r,location:a,file:o,line:e,keyValues:i})}async function y(n,r){await u(t.Error,n,r)}async function I(n,r){await u(t.Warn,n,r)}async function O(n,r){await u(t.Info,n,r)}async function R(n,r){await u(t.Debug,n,r)}async function h(n,r){await u(t.Trace,n,r)}async function E(n){return await b("log://log",r=>{const{level:c}=r.payload;let{message:a}=r.payload;a=a.replace(/[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g,""),n({message:a,level:c})})}async function p(){return await E(({level:n,message:r})=>{switch(n){case t.Trace:console.log(r);break;case t.Debug:console.debug(r);break;case t.Info:console.info(r);break;case t.Warn:console.warn(r);break;case t.Error:console.error(r);break;default:throw new Error(`unknown log level ${n}`)}})}export{t as LogLevel,p as attachConsole,E as attachLogger,R as debug,y as error,O as info,h as trace,I as warn};
