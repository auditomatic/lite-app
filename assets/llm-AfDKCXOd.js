import{e,d as t}from"./index-BFa6Iu16.js";import{a as o}from"./apiLogger-wE3EW76_.js";import{s as n}from"./safeJson-BfKuju6h.js";class r extends Error{constructor(e,t,o,n){super(e),this.provider=t,this.statusCode=o,this.details=n,this.name="LLMError"}}function s(e,t,n,r,s,a,i,p,c,u){return o.createAPILog({url:e,method:t,headers:n,body:r},{status:s.status,headers:Object.fromEntries(s.headers.entries()),body:a,timing_ms:i},p||{prompt_tokens:0,completion_tokens:0,total_tokens:0},c,u)}async function a(e,o,n){const s=await t.providers.get(n),a=s?.timeout_ms||6e4,i=new AbortController,p=setTimeout(()=>{i.abort()},a);try{const t=await fetch(e,{...o,signal:i.signal});return clearTimeout(p),t}catch(c){if(clearTimeout(p),c instanceof Error&&"AbortError"===c.name)throw new r(`API call timed out after ${a}ms`,n,408,{timeout_ms:a});throw c}}async function i(t,o){const i=e(),p=await i.loadSettings();switch(o.provider){case"openai":if(!p.openai_api_key)throw new r("OpenAI API key not configured","openai");return async function(e,t,o){const i=Date.now(),p=o?`${o}/https://api.openai.com/v1/chat/completions`:"https://api.openai.com/v1/chat/completions",c={model:e.model,messages:[{role:"user",content:e.prompt}],temperature:e.temperature,max_tokens:e.max_tokens};if("function_tool_calling"===e.output_format){const t="number"===e.output_type?"number":"string";c.functions=[{name:"provide_answer",description:"Provides an answer to the prompt",parameters:{type:"object",properties:{answer:{type:t,description:"The answer value"}},required:["answer"]}}],c.function_call={name:"provide_answer"}}else if("response_format_json_mode"===e.output_format){const t="number"===e.output_type?"number":"string";c.response_format={type:"json_schema",json_schema:{name:"answer_response",strict:!0,schema:{type:"object",properties:{answer:{type:t,description:"The answer value"}},required:["answer"],additionalProperties:!1}}},c.messages[0].content+="\n\nPlease respond with a JSON object containing your answer."}const u={"Content-Type":"application/json",Authorization:`Bearer ${t}`},m=await a(p,{method:"POST",headers:u,body:JSON.stringify(c),referrerPolicy:"no-referrer"},"openai");if(!m.ok){const e=await m.json().catch(()=>({error:{message:m.statusText}}));throw new r(e.error?.message||"OpenAI API error","openai",m.status,e)}const l=await m.text(),_=n(l),d=Date.now()-i;if(!_?.choices?.length)throw new r("Invalid OpenAI API response structure - missing choices array","openai",m.status,{received:_,raw_response:l.substring(0,500)});const h=_.choices[0].message,f=s(p,"POST",u,c,m,l,d,_.usage,"openai",e.model);let w="",g="";if("response_format_json_mode"===e.output_format&&h.content){w=h.content;try{const e=n(w);g=e&&"object"==typeof e&&"answer"in e?String(e.answer):w}catch(y){g=w}}else if(h.function_call){const e=h.function_call.arguments;w=e;try{const t=n(e);g=t&&"object"==typeof t?String(t.answer||""):e}catch(y){g=e}}else w=h.content||"",g=w;return{content:w,extracted_value:g,usage:_.usage,response_time:d,api_call_log:f}}(t,p.openai_api_key,p.cors_proxy);case"anthropic":if(!p.anthropic_api_key)throw new r("Anthropic API key not configured","anthropic");return async function(e,t,o){const i=Date.now(),p=o?`${o}/https://api.anthropic.com/v1/messages`:"https://api.anthropic.com/v1/messages",c={model:e.model,messages:[{role:"user",content:e.prompt}],max_tokens:e.max_tokens,temperature:e.temperature},u={"Content-Type":"application/json","x-api-key":t,"anthropic-version":"2023-06-01"};if("function_tool_calling"===e.output_format||"response_format_json_mode"===e.output_format){const t="number"===e.output_type?"number":"string";c.tools=[{name:"provide_answer",description:"Provides an answer to the prompt",input_schema:{type:"object",properties:{answer:{type:t,description:"The answer value"}},required:["answer"]}}],c.tool_choice={type:"tool",name:"provide_answer"},u["anthropic-beta"]="tools-2024-04-04"}const m=await a(p,{method:"POST",headers:u,body:JSON.stringify(c),referrerPolicy:"no-referrer"},"anthropic");if(!m.ok){const e=await m.json().catch(()=>({error:{message:m.statusText}}));throw new r(e.error?.message||"Anthropic API error","anthropic",m.status,e)}const l=await m.text(),_=n(l),d=Date.now()-i,h=s(p,"POST",u,c,m,l,d,_.usage,"anthropic",e.model);let f="",w="";if(!_?.content||!Array.isArray(_.content)||0===_.content.length)throw new r("Invalid Anthropic API response structure - missing or invalid content array","anthropic",m.status,{received:_,raw_response:l.substring(0,500)});const g=_.content.find(e=>"tool_use"===e.type);if(g&&g.input){try{f=JSON.stringify(g.input)}catch(y){console.warn("Failed to stringify tool use input:",y),f="[Complex Object]"}w=String(g.input?.answer||"")}else{const e=_.content.find(e=>"text"===e.type);f=e?.text||"",w=f}return{content:f,extracted_value:w,usage:{prompt_tokens:_.usage?.input_tokens||0,completion_tokens:_.usage?.output_tokens||0,total_tokens:(_.usage?.input_tokens||0)+(_.usage?.output_tokens||0)},response_time:d,api_call_log:h}}(t,p.anthropic_api_key,p.cors_proxy);case"ollama":return async function(e,t){const o=Date.now(),i={model:e.model.startsWith("ollama:")?e.model.substring(7):e.model,prompt:e.prompt,temperature:e.temperature,options:{num_predict:e.max_tokens},stream:!1};if("function_tool_calling"===e.output_format||"response_format_json_mode"===e.output_format){const t="number"===e.output_type?"number":"string";i.format={type:"object",properties:{answer:{type:t}},required:["answer"]},i.prompt=e.prompt+'\n\nPlease respond with valid JSON in the format: {"answer": <your_answer>}'}const p={"Content-Type":"application/json"},c=await a(`${t}/api/generate`,{method:"POST",headers:p,body:JSON.stringify(i)},"ollama");if(!c.ok){const e=await c.text();throw new r(`Ollama API error: ${e}`,"ollama",c.status)}const u=await c.text(),m=n(u),l=Date.now()-o,_=s(`${t}/api/generate`,"POST",p,i,c,u,l,{prompt_tokens:0,completion_tokens:0,total_tokens:0},"ollama",e.model);if(!m||"object"!=typeof m||"string"!=typeof m.response)throw new r("Invalid Ollama API response structure - missing or invalid response field","ollama",c.status,{received:m,raw_response:u.substring(0,500)});const d=m.response;let h=d;if("function_tool_calling"===e.output_format||"response_format_json_mode"===e.output_format)try{const e=n(d);e&&"object"==typeof e&&"answer"in e&&(h=String(e.answer))}catch(f){h=d}return{content:d,extracted_value:h,response_time:l,api_call_log:_}}(t,p.ollama_base_url||"http://localhost:11434");case"openrouter":if(!p.openrouter_api_key)throw new r("OpenRouter API key not configured","openrouter");return async function(e,t,o){const i=Date.now(),p="https://openrouter.ai/api/v1",c=o?`${o}/${p}/chat/completions`:`${p}/chat/completions`,u={model:e.model,messages:[{role:"user",content:e.prompt}],temperature:e.temperature,max_tokens:e.max_tokens};if("response_format_json_mode"===e.output_format){const t="number"===e.output_type?"number":"string";u.response_format={type:"json_schema",json_schema:{name:"answer_response",strict:!0,schema:{type:"object",properties:{answer:{type:t,description:"The answer value"}},required:["answer"],additionalProperties:!1}}},u.messages[0].content+="\n\nPlease respond with a JSON object containing your answer."}else if("function_tool_calling"===e.output_format){const t="number"===e.output_type?"number":"string";u.tools=[{type:"function",function:{name:"provide_answer",description:"Provides an answer to the prompt",parameters:{type:"object",properties:{answer:{type:t,description:"The answer value"}},required:["answer"]}}}]}const m={"Content-Type":"application/json",Authorization:`Bearer ${t}`,"HTTP-Referer":window.location.origin,"X-Title":"Auditomatic Lite"},l=await a(c,{method:"POST",headers:m,body:JSON.stringify(u),referrerPolicy:"no-referrer"},"openrouter");if(!l.ok){const e=await l.json().catch(()=>({error:{message:l.statusText}}));let t=e.error?.message||"OpenRouter API error";throw 401===l.status&&t.includes("No auth credentials found")?t="Invalid OpenRouter API key. Please check your API key in Settings.":(t.includes("tool")||t.includes("function"))&&(t=`OpenRouter: The selected model/provider does not support tool calling. ${t}`),new r(t,"openrouter",l.status,e)}const _=await l.text(),d=n(_),h=Date.now()-i;if(!d?.choices?.length)throw new r("Invalid OpenRouter API response structure - missing choices array","openrouter",l.status,{received:d,raw_response:_.substring(0,500)});const f=d.choices[0].message,w=s(c,"POST",m,u,l,_,h,d.usage,"openrouter",e.model);let g="",y="";if("response_format_json_mode"===e.output_format&&f.content){g=f.content;try{const e=n(g);y=e&&"object"==typeof e&&"answer"in e?String(e.answer):g}catch(b){y=g}}else if(f.tool_calls&&f.tool_calls.length>0){const e=f.tool_calls[0].function.arguments;g=e;try{const t=n(e);y=t&&"object"==typeof t?String(t.answer||""):e}catch(b){y=e}}else g=f.content||"",y=g;return{content:g,extracted_value:y,usage:d.usage,response_time:h,api_call_log:w}}(t,p.openrouter_api_key,p.cors_proxy);default:throw new r(`Unsupported provider: ${o.provider}`,o.provider)}}export{r as L,i as c};
