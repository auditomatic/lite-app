const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/useCostEstimation-DhmMUD3f.js","assets/index-SihudOJq.js","assets/index-DNlH0UgC.css"])))=>i.map(i=>d[i]);
import{t as g,d as p,a as v,_ as S}from"./index-SihudOJq.js";var I={exports:{}};(function(w,e){(function(t,a){a()})(g,function(){function t(n,i){return typeof i>"u"?i={autoBom:!1}:typeof i!="object"&&(console.warn("Deprecated: Expected third argument to be a object"),i={autoBom:!i}),i.autoBom&&/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(n.type)?new Blob(["\uFEFF",n],{type:n.type}):n}function a(n,i,u){var d=new XMLHttpRequest;d.open("GET",n),d.responseType="blob",d.onload=function(){c(d.response,i,u)},d.onerror=function(){console.error("could not download file")},d.send()}function s(n){var i=new XMLHttpRequest;i.open("HEAD",n,!1);try{i.send()}catch{}return 200<=i.status&&299>=i.status}function r(n){try{n.dispatchEvent(new MouseEvent("click"))}catch{var i=document.createEvent("MouseEvents");i.initMouseEvent("click",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),n.dispatchEvent(i)}}var o=typeof window=="object"&&window.window===window?window:typeof self=="object"&&self.self===self?self:typeof g=="object"&&g.global===g?g:void 0,l=o.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),c=o.saveAs||(typeof window!="object"||window!==o?function(){}:"download"in HTMLAnchorElement.prototype&&!l?function(n,i,u){var d=o.URL||o.webkitURL,f=document.createElement("a");i=i||n.name||"download",f.download=i,f.rel="noopener",typeof n=="string"?(f.href=n,f.origin===location.origin?r(f):s(f.href)?a(n,i,u):r(f,f.target="_blank")):(f.href=d.createObjectURL(n),setTimeout(function(){d.revokeObjectURL(f.href)},4e4),setTimeout(function(){r(f)},0))}:"msSaveOrOpenBlob"in navigator?function(n,i,u){if(i=i||n.name||"download",typeof n!="string")navigator.msSaveOrOpenBlob(t(n,u),i);else if(s(n))a(n,i,u);else{var d=document.createElement("a");d.href=n,d.target="_blank",setTimeout(function(){r(d)})}}:function(n,i,u,d){if(d=d||open("","_blank"),d&&(d.document.title=d.document.body.innerText="downloading..."),typeof n=="string")return a(n,i,u);var f=n.type==="application/octet-stream",T=/constructor/i.test(o.HTMLElement)||o.safari,b=/CriOS\/[\d]+/.test(navigator.userAgent);if((b||f&&T||l)&&typeof FileReader<"u"){var y=new FileReader;y.onloadend=function(){var m=y.result;m=b?m:m.replace(/^data:[^;]*;/,"data:attachment/file;"),d?d.location.href=m:location=m,d=null},y.readAsDataURL(n)}else{var C=o.URL||o.webkitURL,h=C.createObjectURL(n);d?d.location=h:location.href=h,d=null,setTimeout(function(){C.revokeObjectURL(h)},4e4)}});o.saveAs=c.saveAs=c,w.exports=c})})(I);var E=I.exports;class L{async exportTrialBundle(e,t={}){try{const a=await p.trials.get(e);if(!a)return{ok:!1,error:new Error(`Trial not found: ${e}`)};const s=await this.buildBundle(a,t),r=t.includeResults?"complete":"draft",o=this.generateFilename(a,r);return await this.saveBundle(s,o,t.format||"json"),{ok:!0,value:{bundle:s,filename:o}}}catch(a){return v.error("Failed to export trial bundle:",a),{ok:!1,error:a instanceof Error?a:new Error("Export failed")}}}async buildBundle(e,t){let a=[],s;(t.includeResults||t.includeApiCalls)&&(a=await p.apiCalls.where("trialId").equals(e.id).toArray(),s=this.calculateSummary(a));let r;if(e.type==="template"&&e.templateConfig){if(e.templateConfig.templateId){const c=await p.template_prompts.get(e.templateConfig.templateId);c&&(r=this.createTemplateSnapshot(c))}if(!r){const c={};if(e.templateConfig.variables)for(const[n,i]of Object.entries(e.templateConfig.variables))c[n]={type:i.type,listId:i.listId,values:i.values,placeholder:i.placeholder};r={id:e.templateConfig.templateId||"unknown",name:e.templateConfig.templateName||"Unknown Template",template:e.templateConfig.template,variables:c,outputType:e.templateConfig.outputType,extractPattern:e.templateConfig.extractPattern,refusalWords:e.templateConfig.refusalWords,rejectRefusalWords:e.templateConfig.rejectRefusalWords}}}const o=await this.loadVariableLists(e),l={version:"1.0",metadata:{exportDate:new Date,trialId:e.id,trialName:e.name,trialStatus:e.status,apiCallCount:a.length},configuration:{trial:e,template:r,variableLists:o}};return t.includeResults&&(a.length>0||s)&&(l.execution={apiCalls:a,summary:s}),l}createTemplateSnapshot(e){return{id:e.id,name:e.name,description:e.description,template:e.template,category:e.category,tags:e.tags?[...e.tags]:void 0,variables:e.variables?{...e.variables}:void 0,outputType:e.outputType,extractPattern:e.extractPattern,refusalWords:e.refusalWords?[...e.refusalWords]:void 0,rejectRefusalWords:e.rejectRefusalWords}}async loadVariableLists(e){var a,s;const t=new Set;if(e.type==="template"&&((a=e.templateConfig)!=null&&a.variables))for(const r of Object.values(e.templateConfig.variables))r.type==="list"&&r.listId&&t.add(r.listId);return e.type==="spreadsheet"&&((s=e.spreadsheetConfig)!=null&&s.datasetId)&&t.add(e.spreadsheetConfig.datasetId),t.size>0?await p.variableLists.where("id").anyOf(Array.from(t)).toArray():[]}calculateSummary(e){var c,n,i;let t=0,a=0,s=0,r=0,o=0,l=0;for(const u of e)switch(u.status){case"completed":t++,(c=u.result)!=null&&c.latency&&(r+=u.result.latency,o++),(i=(n=u.result)==null?void 0:n.usage)!=null&&i.total_tokens&&(l+=u.result.usage.total_tokens);break;case"failed":a++;break;case"cancelled":s++;break}return{totalCalls:e.length,completed:t,failed:a,cancelled:s,averageLatency:o>0?r/o:void 0,totalTokens:l>0?l:void 0,estimatedCost:this.estimateCost(l)}}estimateCost(e){if(e)return e/1e3*.01}generateFilename(e,t="complete"){const a=new Date().toISOString().split("T")[0],s=e.name.replace(/[^a-z0-9]/gi,"_").toLowerCase();return`trial_${t}_${s}_${a}.json`}async saveBundle(e,t,a){let s;a==="compressed"?s=JSON.stringify(e):s=JSON.stringify(e,null,2);const r=new Blob([s],{type:"application/json"});E.saveAs(r,t)}}class O{async importTrialBundle(e,t={}){var a,s;try{const r=JSON.parse(e);if(!r.version||!((a=r.configuration)!=null&&a.trial))return{ok:!1,error:new Error("Invalid bundle format")};const o=await this.importVariableLists(r.configuration.variableLists||[]);let l;r.configuration.template&&(l=await this.importTemplate(r.configuration.template));const c=await this.createTrialFromBundle(r.configuration.trial,o,l,t.namePrefix,t.importAsCompleted);return c.ok?(t.importAsCompleted&&t.importResults&&((s=r.execution)!=null&&s.apiCalls)&&await this.importApiCalls(r.execution.apiCalls,c.value,r.configuration.trial.id),{ok:!0,value:{trialId:c.value}}):c}catch(r){return v.error("Failed to import trial bundle:",r),{ok:!1,error:r instanceof Error?r:new Error("Import failed")}}}async importVariableLists(e){const t=new Map;for(const a of e){const s=await this.findDuplicateList(a);if(s)t.set(a.id,s.id);else{const r=this.generateId("list"),o={...a,id:r,created:new Date,updated:new Date};await p.variableLists.add(o),t.set(a.id,r)}}return t}async findDuplicateList(e){const t=await p.variableLists.where("name").equals(e.name).toArray();for(const a of t)if(this.listsAreIdentical(a,e))return a}listsAreIdentical(e,t){if(e.category!==t.category)return!1;switch(e.category){case"simple":return JSON.stringify(e.values)===JSON.stringify(t.values);case"attributed":return JSON.stringify(e.items)===JSON.stringify(t.items);case"tabular":return JSON.stringify(e.tabularData)===JSON.stringify(t.tabularData);default:return!1}}async importTemplate(e){const t=await this.findDuplicateTemplate(e);if(t)return v.info(`Using existing template: ${t.name} (${t.id})`),t.id;const a={id:this.generateId("template"),name:e.name||"Imported Template",description:e.description,template:e.template,category:e.category,tags:e.tags||[],type:"template",isDefault:!1,variables:e.variables||{},outputType:e.outputType,extractPattern:e.extractPattern,refusalWords:e.refusalWords,rejectRefusalWords:e.rejectRefusalWords,created:new Date,updated:new Date};return v.info(`Creating new template: ${a.name} with ${Object.keys(a.variables).length} variables`),await p.template_prompts.add(a),a.id}async findDuplicateTemplate(e){const t=await p.template_prompts.where("name").equals(e.name||"").toArray();for(const s of t)if(this.templatesAreIdentical(s,e))return s;const a=await p.template_prompts.toArray();for(const s of a)if(this.templatesAreIdentical(s,e))return s}templatesAreIdentical(e,t){if(e.template!==t.template||e.outputType!==t.outputType||e.extractPattern!==t.extractPattern||e.rejectRefusalWords!==t.rejectRefusalWords)return!1;const a=JSON.stringify(e.refusalWords||[]),s=JSON.stringify(t.refusalWords||[]);if(a!==s)return!1;const r=JSON.stringify(e.variables||{}),o=JSON.stringify(t.variables||{});return r===o}async createTrialFromBundle(e,t,a,s,r){try{const o=r?"completed":"draft",l={...e,id:this.generateId("trial"),name:(s||"Imported: ")+e.name,status:o,created:new Date,started:r?e.started:void 0,completed:r?e.completed:void 0,progress:r?{...e.progress}:{total:0,completed:0,failed:0,cancelled:0,pending:0,running:0,networkErrors:0}};if(l.type==="template"&&l.templateConfig&&(a&&(l.templateConfig.templateId=a),l.templateConfig.variables)){for(const[,c]of Object.entries(l.templateConfig.variables))if(c.type==="list"&&c.listId){const n=t.get(c.listId);n&&(c.listId=n)}}if(l.type==="spreadsheet"&&l.spreadsheetConfig){const c=t.get(l.spreadsheetConfig.datasetId);c&&(l.spreadsheetConfig.datasetId=c)}if(await p.trials.add(l),!r){const{v4TrialOperations:c}=await S(async()=>{const{v4TrialOperations:i}=await import("./useCostEstimation-DhmMUD3f.js").then(u=>u.v);return{v4TrialOperations:i}},__vite__mapDeps([0,1,2])),n=await c.generateApiCalls(l,l.repeatCount||1);l.progress.total=n.length,l.progress.pending=n.length,await p.trials.put(l),n.length>0&&await p.apiCalls.bulkAdd(n)}return{ok:!0,value:l.id}}catch(o){return{ok:!1,error:o instanceof Error?o:new Error("Failed to create trial")}}}async importApiCalls(e,t,a){const s=e.map(r=>({...r,id:this.generateId("call"),trialId:t,created:new Date}));await p.apiCalls.bulkAdd(s)}generateId(e){const t=Date.now().toString(36),a=Math.random().toString(36).substring(2,9);return`${e}_${t}_${a}`}}const j=new L,k=new O;export{L as TrialBundleExportService,O as TrialBundleImportService,j as trialBundleExportService,k as trialBundleImportService};
