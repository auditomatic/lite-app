const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./dataManagement-BiAJjF8H.js","./index-DWYxkL85.js","./vendor-DdqHZeTC.js","./db-ftwlfnxb.js","./index-zWy5gnVS.css","./runProcessor-D5LRsvDR.js","./llm-BtshXLMj.js","./apiLogger-wE3EW76_.js","./safeJson-BfKuju6h.js"])))=>i.map(i=>d[i]);
import{d as r,b as e,c as t}from"./index-DWYxkL85.js";import{h as a,r as n}from"./vendor-DdqHZeTC.js";const s=a("runs",()=>{const a=n([]),s=n(!1),o=n(null);async function u(e,t){try{const n={};for(const[r,e]of Object.entries(t))"models"===r&&Array.isArray(e)?n[r]=[...e]:n[r]="parameters"===r&&"object"==typeof e?{...e}:e;n.updated_at=(new Date).toISOString(),await r.runs.update(e,n);const s=a.value.findIndex(r=>r.id===e);if(-1!==s){const r={...a.value[s],...n};return a.value=[...a.value.slice(0,s),r,...a.value.slice(s+1)],r}throw new Error("Run not found after update")}catch(n){throw o.value=n instanceof Error?n.message:"Failed to update run",n}}return{runs:a,loading:s,error:o,loadRuns:async function(){s.value=!0,o.value=null;try{a.value=await r.runs.toArray()}catch(e){o.value=e instanceof Error?e.message:"Failed to load runs",console.error("Error loading runs:",e)}finally{s.value=!1}},createRun:async function(e){try{const t=(new Date).toISOString(),n={name:e.name,design_id:e.design_id,models:[...e.models],parameters:{...e.parameters},status:"ready",total_tasks:0,completed_tasks:0,error_count:0,created_at:t,updated_at:t},s=await r.runs.add(n);return n.id=s,a.value.push(n),n}catch(t){throw o.value=t instanceof Error?t.message:"Failed to create run",t}},updateRun:u,deleteRun:async function(r){try{const{dataManager:t}=await e(async()=>{const{dataManager:r}=await import("./dataManagement-BiAJjF8H.js");return{dataManager:r}},__vite__mapDeps([0,1,2,3,4]),import.meta.url),n=await t.deleteRun(r);if(!n.success)throw o.value=n.error||"Failed to delete run",new Error(n.error||"Failed to delete run");a.value=a.value.filter(e=>e.id!==r),console.log(`Deleted run ${r} and ${n.details?.tasks||0} associated tasks`)}catch(t){throw o.value=t instanceof Error?t.message:"Failed to delete run",t}},startRun:async function(a){try{const n=await r.runs.get(a);if(!n)throw new Error("Run not found");if(!n.parameters?.temperature&&0!==n.parameters?.temperature)throw new Error("Temperature parameter is required");if(!n.parameters?.max_tokens)throw new Error("Max tokens parameter is required");if(n.parameters.temperature<0||n.parameters.temperature>2)throw new Error("Temperature must be between 0 and 2");if(n.parameters.max_tokens<1||n.parameters.max_tokens>8e3)throw new Error("Max tokens must be between 1 and 8000");await u(a,{status:"pending",started_at:(new Date).toISOString()});const s=t();await s.setActiveRun(a);const{runProcessor:o}=await e(async()=>{const{runProcessor:r}=await import("./runProcessor-D5LRsvDR.js");return{runProcessor:r}},__vite__mapDeps([5,1,2,3,4,6,7,8]),import.meta.url);o.startRun(a).catch(r=>{console.error("Failed to process run:",r),u(a,{status:"error"})})}catch(n){throw o.value=n instanceof Error?n.message:"Failed to start run",n}},stopRun:async function(r){try{await u(r,{status:"stopped"});const{runProcessor:t}=await e(async()=>{const{runProcessor:r}=await import("./runProcessor-D5LRsvDR.js");return{runProcessor:r}},__vite__mapDeps([5,1,2,3,4,6,7,8]),import.meta.url);t.stopRun(r)}catch(t){throw o.value=t instanceof Error?t.message:"Failed to stop run",t}},getRunById:async function(e){try{return await r.runs.get(e)}catch(t){throw o.value=t instanceof Error?t.message:"Failed to get run",t}}}});export{s as u};
