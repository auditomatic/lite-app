import{g as y,a as F,b as N}from"./index-C2iZHtnC.js";const w=10;function R(){const S=y(),g=N();function I(t,e,o){var M;if(!t)return{totalTokens:0,combinationCount:1,perCallAverage:0};let n=t;const i=/\{\{?\s*(\w+)\s*\}?\}/g,a=new Set;n=n.replace(i,(c,s)=>(a.add(s),""));const u=g.estimateTokens(n),p=new Map,f=c=>(p.has(c)||p.set(c,g.estimateTokens(c)),p.get(c));let r=1;const $=new Map;for(const[c,s]of Object.entries(e)){if(!a.has(c))continue;let d=[];if(s.type==="value"&&s.values)d=s.values;else if(s.type==="list"&&s.listId&&o){const m=o.find(x=>x.id===s.listId);m&&(m.category==="simple"?d=m.values||[]:m.category==="attributed"&&(d=((M=m.items)==null?void 0:M.map(x=>x.value))||[]))}if(d.length>0){r*=d.length;const m=d.reduce((x,E)=>x+f(E),0);$.set(c,{tokenSum:m,valueCount:d.length})}}let v=0;for(const[,c]of $){const s=r/c.valueCount;v+=c.tokenSum*s}const b=u*r+v;return{totalTokens:Math.ceil(b),combinationCount:r,perCallAverage:r>0?Math.ceil(b/r):0}}function P(t){return t?g.estimateTokens(t):0}function C(t,e,o){const n=S.getOutputTokenLimit(t,e,o);if(!n)return F.warn("No output token limit found for model",{provider:t,modelId:e}),{min:-1,max:-1,expected:-1};const i=["max_tokens","max_completion_tokens","max_output_tokens","num_predict","maxTokens"];let a=0;for(const u of i)if(o[u]!==void 0){a=o[u];break}return a||(a=n),{min:w,max:n,expected:Math.min(a,n)}}function V(t,e,o,n={}){const i=e>0?t/e:0,a=h(i,o,n);return T(a,e)}function h(t,e,o={}){var f,r;if(!e)return k();const n=C(e.provider,e.modelId,o);if(n.expected===-1)return{tokens:{input:t,output:{min:-1,max:-1,expected:-1}},cost:{input:0,output:{min:-1,max:-1,expected:-1},total:{min:-1,max:-1,expected:-1}},meta:{hasValidCost:!1,isLocalModel:e.provider.includes("ollama")||e.provider==="deterministic",confidence:"low",provider:e.provider,modelId:e.modelId}};const i=((f=e.capabilities)==null?void 0:f.inputCostPerToken)||0,a=((r=e.capabilities)==null?void 0:r.outputCostPerToken)||0,u=t*i;let p="low";return i>0&&a>0&&(n.expected>0?p="high":p="medium"),{tokens:{input:t,output:n},cost:{input:u,output:{min:n.min*a,max:n.max*a,expected:n.expected*a},total:{min:u+n.min*a,max:u+n.max*a,expected:u+n.expected*a}},meta:{hasValidCost:i>0||a>0,isLocalModel:e.provider.includes("ollama")||e.provider==="deterministic",confidence:p,provider:e.provider,modelId:e.modelId}}}function _(t,e="range"){if(t.cost.total.expected===-1)return"Unable to estimate";if(t.meta.isLocalModel)return"Free (local)";if(!t.meta.hasValidCost)return"No pricing data";if(t.cost.total.max===0)return"Free";switch(e){case"compact":return l(t.cost.total.expected);case"range":const o=l(t.cost.total.min),n=l(t.cost.total.max),i=l(t.cost.total.expected);return Math.abs(t.cost.total.max-t.cost.total.min)<1e-4?i:`~${i} (${o}-${n})`;case"detailed":const a=`${t.tokens.input} input`,u=`${t.tokens.output.min}-${t.tokens.output.max} output`,p=`${l(t.cost.total.min)}-${l(t.cost.total.max)}`;return`${a} + ${u} tokens: ${p}`;case"tokens":return`${t.tokens.input} + ${t.tokens.output.min}-${t.tokens.output.max} tokens`}}function l(t){if(t===0)return"$0.00";if(t<.01){let e=2,o=t;for(;o<.1;)o*=10,e++;return`$${t.toFixed(e)}`}return t<1?`$${t.toFixed(3)}`:t<10?`$${t.toFixed(2)}`:t<100?`$${t.toFixed(1)}`:`$${Math.round(t).toLocaleString()}`}function L(t){return t.length===0?k():t.reduce((e,o)=>({tokens:{input:e.tokens.input+o.tokens.input,output:{min:e.tokens.output.min+o.tokens.output.min,max:e.tokens.output.max+o.tokens.output.max,expected:e.tokens.output.expected+o.tokens.output.expected}},cost:{input:e.cost.input+o.cost.input,output:{min:e.cost.output.min+o.cost.output.min,max:e.cost.output.max+o.cost.output.max,expected:e.cost.output.expected+o.cost.output.expected},total:{min:e.cost.total.min+o.cost.total.min,max:e.cost.total.max+o.cost.total.max,expected:e.cost.total.expected+o.cost.total.expected}},meta:{hasValidCost:o.meta.hasValidCost||e.meta.hasValidCost,isLocalModel:o.meta.isLocalModel&&e.meta.isLocalModel,confidence:o.meta.confidence==="low"?"low":e.meta.confidence,provider:"multiple",modelId:"multiple"}}),k())}function T(t,e){return{tokens:{input:t.tokens.input*e,output:{min:t.tokens.output.min*e,max:t.tokens.output.max*e,expected:t.tokens.output.expected*e}},cost:{input:t.cost.input*e,output:{min:t.cost.output.min*e,max:t.cost.output.max*e,expected:t.cost.output.expected*e},total:{min:t.cost.total.min*e,max:t.cost.total.max*e,expected:t.cost.total.expected*e}},meta:t.meta}}function k(){return{tokens:{input:0,output:{min:0,max:0,expected:0}},cost:{input:0,output:{min:0,max:0,expected:0},total:{min:0,max:0,expected:0}},meta:{hasValidCost:!1,isLocalModel:!1,confidence:"low",provider:"",modelId:""}}}return{calculateTemplateTokens:I,calculatePromptTokens:P,getOutputTokenRange:C,estimateCost:h,estimateTotalCost:V,formatCost:_,formatSingleCost:l,sumEstimates:L,multiplyEstimate:T,createEmptyEstimate:k,MIN_OUTPUT_TOKENS:w}}export{R as u};
