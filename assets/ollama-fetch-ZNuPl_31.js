import{a as n,_ as f}from"./index-V1E7czL8.js";import"./vue-vendor-DPw1dQYc.js";import"./ui-vendor-IRGmExUJ.js";import"./utils-vendor-B76-F3_P.js";import"./tauri-vendor-CZ7fMPM9.js";const w=typeof window<"u"&&(window.__TAURI_INTERNALS__||window.__TAURI__);let l=fetch,s=null,i=!1;w?s=f(()=>import("./tauri-vendor-CZ7fMPM9.js").then(e=>e.d),[]).then(e=>{l=e.fetch,i=!0,n.info("🦀 Tauri HTTP client loaded for CORS bypass")}).catch(e=>{n.error("❌ Failed to load Tauri HTTP plugin:",e),n.warn("Failed to load Tauri HTTP plugin, using browser fetch:",e),l=fetch,i=!0}):i=!0;async function g(){return i||s&&(await s,s=null),l}async function c(e,o={}){const m=`http://localhost:11434${e}`,r=window.location.protocol==="https:",u=await g();window.location.protocol,u.name;const d=o.timeout||3e4,p=new AbortController,h=setTimeout(()=>p.abort(),d);try{const a=await u(m,{...o,signal:p.signal,headers:{"Content-Type":"application/json",...o.headers}});return clearTimeout(h),a}catch(a){clearTimeout(h);const t=new Error;throw t.isHttps=r,a.name==="AbortError"?(t.type="timeout",t.message="Request to Ollama timed out",t.details=`The request took longer than ${d/1e3} seconds`):a.message?.includes("Failed to fetch")||a.message?.includes("NetworkError")?r?(t.type="cors",t.message="Cannot connect to Ollama from HTTPS site",t.details="Browser security prevents HTTPS sites from accessing local HTTP services. To use Ollama: 1) Download the desktop app, 2) Run Auditomatic locally, or 3) Configure Ollama with OLLAMA_ORIGINS=*"):(t.type="network",t.message="Cannot connect to Ollama",t.details="Make sure Ollama is running on your computer (http://localhost:11434)"):(t.type="unknown",t.message=a.message||"Unknown error connecting to Ollama",t.details=a.stack),n.warn("Ollama fetch error",{type:t.type,endpoint:e,isHttps:r,originalError:a.message}),t}}async function I(){try{return{available:(await c("/api/tags",{timeout:5e3})).ok}}catch(e){return{available:!1,error:e}}}async function A(){try{return await c("/api/tags",{method:"GET",headers:{Accept:"application/json"}}),{hasIssue:!1}}catch{return{hasIssue:!0,error:"Either Ollama is not running or CORS is not properly configured. Ensure Ollama is running and add OLLAMA_ORIGINS=* to your Ollama service configuration."}}}async function F(){const e=await c("/api/tags");if(!e.ok)throw new Error(`Failed to fetch models: ${e.status} ${e.statusText}`);return e.json()}async function b(e){const o=await c("/api/delete",{method:"DELETE",body:JSON.stringify({name:e})});if(!o.ok)throw new Error(`Failed to delete model: ${o.status} ${o.statusText}`)}export{I as checkOllamaConnection,b as deleteOllamaModel,A as detectOllamaIssue,F as fetchOllamaModels,c as ollamaFetch};
