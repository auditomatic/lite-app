import{i as k,d as l,a as p}from"./index-DNH2rO2k.js";import{b as V}from"./useV4CrossTab-B4Q30vfJ.js";import{f as I,c as F}from"./vue-vendor-DPw1dQYc.js";class x{async create(t){try{const e=k("template"),r=await this.validateTemplate(t.template,t.variables);if(!r.isValid)return{ok:!1,error:new Error(`Template validation failed: ${r.errors.join(", ")}`)};if(t.variables){const n=await this.validateVariableListReferences(t.variables);if(!n.valid)return{ok:!1,error:new Error(`Invalid variable list references: ${n.errors.join(", ")}`)}}const i=new Date,a={id:e,name:t.name,description:t.description,type:"template",template:t.template,variables:t.variables?Object.freeze(this.deepFreezeVariables(t.variables)):Object.freeze({}),category:t.category||"Custom",tags:t.tags?Object.freeze([...t.tags]):Object.freeze([]),isDefault:!1,created:i,updated:i,parserId:t.parserId,outputType:t.outputType,extractPattern:t.extractPattern,refusalWords:t.refusalWords?Object.freeze([...t.refusalWords]):void 0,refusalMode:t.refusalMode,rejectRefusalWords:t.rejectRefusalWords},s=Object.freeze(a);return await l.transaction("rw",l.template_prompts,async()=>{await l.template_prompts.add(s)}),p.info("V4: Created template",{id:e,name:t.name,variableCount:Object.keys(t.variables||{}).length}),V("templates","create"),{ok:!0,value:e}}catch(e){return p.error("V4: Failed to create template",e),{ok:!1,error:e instanceof Error?e:new Error("Failed to create template")}}}async update(t,e){try{const r=await l.template_prompts.get(t);if(!r)return{ok:!1,error:new Error("Template not found")};if(e.template!==void 0){const a=await this.validateTemplate(e.template,e.variables||r.variables);if(!a.isValid)return{ok:!1,error:new Error(`Template validation failed: ${a.errors.join(", ")}`)}}if(e.variables!==void 0){const a=await this.validateVariableListReferences(e.variables);if(!a.valid)return{ok:!1,error:new Error(`Invalid variable list references: ${a.errors.join(", ")}`)}}const i={...e,updated:new Date};return this.freezeUpdateData(i),await l.transaction("rw",l.template_prompts,async()=>{await l.template_prompts.update(t,i)}),p.info("V4: Updated template",{id:t,updates:Object.keys(e)}),V("templates","update"),{ok:!0,value:void 0}}catch(r){return p.error("V4: Failed to update template",r),{ok:!1,error:r instanceof Error?r:new Error("Failed to update template")}}}async delete(t){try{const e=await l.template_prompts.get(t);return e?(await l.transaction("rw",l.template_prompts,async()=>{await l.template_prompts.delete(t)}),p.info("V4: Deleted template",{id:t,name:e.name}),V("templates","delete"),{ok:!0,value:void 0}):{ok:!1,error:new Error("Template not found")}}catch(e){return p.error("V4: Failed to delete template",e),{ok:!1,error:e instanceof Error?e:new Error("Failed to delete template")}}}async duplicate(t,e){try{const r=await l.template_prompts.get(t);if(!r)return{ok:!1,error:new Error("Template not found")};const i={name:e||`${r.name} (Copy)`,description:r.description,template:r.template,variables:r.variables?this.deepCloneVariables(r.variables):void 0,category:r.category,tags:r.tags?[...r.tags]:void 0,parserId:r.parserId,outputType:r.outputType,extractPattern:r.extractPattern,refusalWords:r.refusalWords?[...r.refusalWords]:void 0,refusalMode:r.refusalMode,rejectRefusalWords:r.rejectRefusalWords};return await this.create(i)}catch(r){return p.error("V4: Failed to duplicate template",r),{ok:!1,error:r instanceof Error?r:new Error("Failed to duplicate template")}}}async linkVariableList(t,e,r){try{const i=await l.template_prompts.get(t);if(!i)return{ok:!1,error:new Error("Template not found")};if(!await l.variableLists.get(r))return{ok:!1,error:new Error("Variable list not found")};const s={...i.variables,[e]:Object.freeze({type:"list",listId:r})};return await l.transaction("rw",l.template_prompts,async()=>{await l.template_prompts.update(t,{variables:Object.freeze(s),updated:new Date})}),p.info("V4: Linked variable list to template",{templateId:t,variableName:e,listId:r}),{ok:!0,value:void 0}}catch(i){return p.error("V4: Failed to link variable list",i),{ok:!1,error:i instanceof Error?i:new Error("Failed to link variable list")}}}async unlinkVariableList(t,e){try{const r=await l.template_prompts.get(t);if(!r)return{ok:!1,error:new Error("Template not found")};const{[e]:i,...a}=r.variables||{};return await l.transaction("rw",l.template_prompts,async()=>{await l.template_prompts.update(t,{variables:Object.freeze(a),updated:new Date})}),p.info("V4: Unlinked variable from template",{templateId:t,variableName:e}),{ok:!0,value:void 0}}catch(r){return p.error("V4: Failed to unlink variable list",r),{ok:!1,error:r instanceof Error?r:new Error("Failed to unlink variable list")}}}async updateVariableListReferences(t,e){try{const r=await l.template_prompts.toArray(),i=[],a=[];for(const n of r){if(!n.variables)continue;let o=!1;const c={...n.variables};for(const[u,f]of Object.entries(n.variables))f.type==="list"&&f.listId===t&&(c[u]=Object.freeze({...f,listId:e}),o=!0);o&&(i.push(n.id),a.push({id:n.id,variables:Object.freeze(c)}))}a.length>0&&await l.transaction("rw",l.template_prompts,async()=>{const n=new Date;for(const o of a)await l.template_prompts.update(o.id,{variables:o.variables,updated:n})});const s={updatedTemplates:a.length,affectedTemplateIds:i};return p.info("V4: Updated variable list references",{oldListId:t,newListId:e,affectedCount:a.length}),{ok:!0,value:s}}catch(r){return p.error("V4: Failed to update variable list references",r),{ok:!1,error:r instanceof Error?r:new Error("Failed to update variable list references")}}}async bulkCreate(t){try{const e=[],r=new Date;for(const a of t){const s=await this.validateTemplate(a.template,a.variables);if(!s.isValid)return{ok:!1,error:new Error(`Bulk validation failed for "${a.name}": ${s.errors.join(", ")}`)};if(a.variables){const n=await this.validateVariableListReferences(a.variables);if(!n.valid)return{ok:!1,error:new Error(`Invalid variable list references in "${a.name}": ${n.errors.join(", ")}`)}}}const i=t.map(a=>{const s=k("template"),n={id:s,name:a.name,description:a.description,type:"template",template:a.template,variables:a.variables?Object.freeze(this.deepFreezeVariables(a.variables)):Object.freeze({}),category:a.category||"Custom",tags:a.tags?Object.freeze([...a.tags]):Object.freeze([]),isDefault:!1,created:r,updated:r,outputType:a.outputType,extractPattern:a.extractPattern,refusalWords:a.refusalWords?Object.freeze([...a.refusalWords]):void 0,rejectRefusalWords:a.rejectRefusalWords};return e.push(s),Object.freeze(n)});return await l.transaction("rw",l.template_prompts,async()=>{await l.template_prompts.bulkAdd(i)}),p.info("V4: Bulk created templates",{count:t.length}),{ok:!0,value:e}}catch(e){return p.error("V4: Failed to bulk create templates",e),{ok:!1,error:e instanceof Error?e:new Error("Failed to bulk create templates")}}}async bulkUpdate(t){try{const e=t.map(s=>s.id),r=await l.template_prompts.where("id").anyOf(e).toArray();if(r.length!==e.length){const s=new Set(r.map(o=>o.id)),n=e.filter(o=>!s.has(o));return{ok:!1,error:new Error(`Some templates not found: ${n.join(", ")}`)}}const i=new Date,a=t.map(({id:s,data:n})=>{const o={...n,updated:i};return this.freezeUpdateData(o),{key:s,changes:o}});return await l.transaction("rw",l.template_prompts,async()=>{await l.template_prompts.bulkUpdate(a)}),p.info("V4: Bulk updated templates",{count:t.length}),{ok:!0,value:void 0}}catch(e){return p.error("V4: Failed to bulk update templates",e),{ok:!1,error:e instanceof Error?e:new Error("Failed to bulk update templates")}}}async bulkDelete(t){try{return await l.transaction("rw",l.template_prompts,async()=>{await l.template_prompts.bulkDelete(t)}),p.info("V4: Bulk deleted templates",{count:t.length}),{ok:!0,value:void 0}}catch(e){return p.error("V4: Failed to bulk delete templates",e),{ok:!1,error:e instanceof Error?e:new Error("Failed to bulk delete templates")}}}async importTemplates(t){try{const e=JSON.parse(t),r=Array.isArray(e)?e:[e],i={imported:0,skipped:0,errors:[],invalidReferences:[]},a=[];for(const s of r)try{if(!s.name||!s.template){i.errors.push(`Template missing required fields: ${s.name||"unnamed"}`),i.skipped++;continue}const n=[];if(s.variables)for(const[,o]of Object.entries(s.variables))typeof o=="object"&&o!==null&&"type"in o&&o.type==="list"&&"listId"in o&&o.listId&&(await l.variableLists.get(o.listId)||n.push(o.listId));n.length>0&&i.invalidReferences.push({templateName:s.name,missingListIds:n}),a.push({name:s.name,description:s.description,template:s.template,variables:s.variables,category:s.category,tags:s.tags,outputType:s.outputType,extractPattern:s.extractPattern,refusalWords:s.refusalWords,refusalMode:s.refusalMode,rejectRefusalWords:s.rejectRefusalWords})}catch(n){i.errors.push(`Failed to process template ${s.name||"unnamed"}: ${n instanceof Error?n.message:"Unknown error"}`),i.skipped++}if(a.length>0){const s=await this.bulkCreate(a);s.ok?i.imported=s.value.length:i.errors.push(`Bulk import failed: ${s.error.message}`)}return{ok:!0,value:i}}catch(e){return p.error("V4: Failed to import templates",e),{ok:!1,error:e instanceof Error?e:new Error("Failed to import templates")}}}async exportTemplates(t){try{const e=await l.template_prompts.where("id").anyOf(t).toArray();return{ok:!0,value:JSON.stringify(e,null,2)}}catch(e){return p.error("V4: Failed to export templates",e),{ok:!1,error:e instanceof Error?e:new Error("Failed to export templates")}}}async exportTemplatesWithDependencies(t){try{const e=await l.template_prompts.where("id").anyOf(t).toArray();if(e.length===0)return{ok:!1,error:new Error("No templates found to export")};const r=new Set,i=[];for(const o of e){const c=[];if(o.variables)for(const u of Object.values(o.variables))u.type==="list"&&u.listId&&(r.add(u.listId),c.push(u.listId));i.push({template:o,dependencies:{variableListIds:c}})}const a=await l.variableLists.where("id").anyOf(Array.from(r)).toArray();return{ok:!0,value:JSON.stringify({version:"2.0",metadata:{exportDate:new Date,appVersion:"3.0.0"},templates:i,variableLists:a},null,2)}}catch(e){return p.error("V4: Failed to export templates with dependencies",e),{ok:!1,error:e instanceof Error?e:new Error("Failed to export templates with dependencies")}}}async importTemplateBundle(t){try{const e=JSON.parse(t);if(!e.version||!e.templates||!e.variableLists)return{ok:!1,error:new Error("Invalid bundle format")};const r={imported:0,skipped:0,errors:[],invalidReferences:[]},i={};for(const a of e.variableLists)try{const s=await this.findDuplicateVariableList(a);if(s)i[a.id]=s.id,p.info(`V4: Using existing variable list ${s.name} for imported list ${a.name}`);else{const n=k("list"),o={...a,id:n,created:new Date,updated:new Date};await l.variableLists.add(o),i[a.id]=n,p.info(`V4: Created new variable list ${a.name} with ID ${n}`)}}catch(s){r.errors.push(`Failed to import variable list ${a.name}: ${s instanceof Error?s.message:"Unknown error"}`)}for(const{template:a}of e.templates)try{if(a.variables){for(const o of Object.values(a.variables))if(o.type==="list"&&o.listId){const c=i[o.listId];c?o.listId=c:r.invalidReferences.push({templateName:a.name,missingListIds:[o.listId]})}}const s={name:a.name,description:a.description,template:a.template,variables:a.variables,category:a.category,tags:a.tags?[...a.tags]:void 0,outputType:a.outputType,extractPattern:a.extractPattern,refusalWords:a.refusalWords?[...a.refusalWords]:void 0,refusalMode:a.refusalMode,rejectRefusalWords:a.rejectRefusalWords},n=await this.create(s);n.ok?r.imported++:(r.errors.push(`Failed to create template ${a.name}: ${n.error?.message}`),r.skipped++)}catch(s){r.errors.push(`Failed to import template ${a.name}: ${s instanceof Error?s.message:"Unknown error"}`),r.skipped++}return{ok:!0,value:r}}catch(e){return p.error("V4: Failed to import template bundle",e),{ok:!1,error:e instanceof Error?e:new Error("Failed to import template bundle")}}}async findDuplicateVariableList(t){const e=await l.variableLists.where("name").equals(t.name).toArray();for(const r of e)if(r.category===t.category&&r.itemCount===t.itemCount)return r;return null}async validateTemplateIntegrity(t){try{const e=t?await l.template_prompts.where("id").equals(t).toArray():await l.template_prompts.toArray(),r={totalTemplates:e.length,templatesWithInvalidReferences:[],orphanedReferences:[]},i=await l.variableLists.toArray(),a=new Set(i.map(s=>s.id));for(const s of e){if(!s.variables)continue;const n=[];for(const[o,c]of Object.entries(s.variables))c.type==="list"&&c.listId?a.has(c.listId)||(n.push({variableName:o,listId:c.listId,issue:"missing_list"}),r.orphanedReferences.push({templateId:s.id,variableName:o,listId:c.listId})):c.type==="list"&&!c.listId&&n.push({variableName:o,listId:"unknown",issue:"invalid_binding"});n.length>0&&r.templatesWithInvalidReferences.push({templateId:s.id,templateName:s.name,invalidVariables:n})}return{ok:!0,value:r}}catch(e){return p.error("V4: Failed to validate template integrity",e),{ok:!1,error:e instanceof Error?e:new Error("Failed to validate template integrity")}}}async cleanupInvalidReferences(){try{const t=await this.validateTemplateIntegrity();if(!t.ok)return{ok:!1,error:t.error};const e={removedReferences:0,affectedTemplates:[]},r=t.value;if(r.orphanedReferences.length>0){const i=[],a=new Map;for(const n of r.orphanedReferences)a.has(n.templateId)||a.set(n.templateId,[]),a.get(n.templateId).push(n.variableName);const s=await l.template_prompts.where("id").anyOf(Array.from(a.keys())).toArray();for(const n of s){const o=a.get(n.id)||[];if(o.length===0)continue;const c={...n.variables};let u=0;for(const f of o)c[f]&&(delete c[f],u++);u>0&&(i.push({id:n.id,variables:Object.freeze(c)}),e.removedReferences+=u,e.affectedTemplates.push(n.id))}i.length>0&&await l.transaction("rw",l.template_prompts,async()=>{const n=new Date;for(const o of i)await l.template_prompts.update(o.id,{variables:o.variables,updated:n})})}return p.info("V4: Cleaned up invalid template references",e),{ok:!0,value:e}}catch(t){return p.error("V4: Failed to cleanup invalid references",t),{ok:!1,error:t instanceof Error?t:new Error("Failed to cleanup invalid references")}}}async enrichWithVariableListData(t){try{const e=new Set;for(const s of t)if(s.variables)for(const n of Object.values(s.variables))n.type==="list"&&n.listId&&e.add(n.listId);const r=await l.variableLists.where("id").anyOf(Array.from(e)).toArray(),i=new Map(r.map(s=>[s.id,s]));return{ok:!0,value:t.map(s=>{const n=Object.keys(s.variables||{}).length;let o=1;const c={},u=[];if(s.variables)for(const[w,b]of Object.entries(s.variables))if(b.type==="list"&&b.listId){const v=i.get(b.listId);v?(c[w]=v,v.category==="simple"&&v.values?o*=v.values.length:v.category==="attributed"&&v.items?o*=v.items.length:v.category==="tabular"&&v.itemCount&&(o*=v.itemCount)):u.push(b.listId)}else b.type==="value"&&b.values&&(o*=b.values.length);const f={...s,variableCount:n,combinationCount:o,tokenEstimate:Math.ceil(s.template.length/4),variableListData:Object.keys(c).length>0?Object.freeze(c):void 0,missingVariableLists:u.length>0?Object.freeze(u):void 0};return Object.freeze(f)})}}catch(e){return p.error("V4: Failed to enrich templates with variable list data",e),{ok:!1,error:e instanceof Error?e:new Error("Failed to enrich templates")}}}async validateTemplate(t,e){const r=[],i=[],a=/\{\{([^}]+)\}\}/g,s=new Set;let n;for(;(n=a.exec(t))!==null;)s.add(n[1].trim());t.trim()||r.push("Template cannot be empty");const o=(t.match(/\{\{/g)||[]).length,c=(t.match(/\}\}/g)||[]).length;o!==c&&r.push("Template has unclosed variable braces");const u=new Set(Object.keys(e||{})),f=Array.from(s).filter(b=>!u.has(b)),w=Array.from(u).filter(b=>!s.has(b));return f.length>0&&i.push(`Variables used in template but not defined: ${f.join(", ")}`),w.length>0&&i.push(`Variables defined but not used in template: ${w.join(", ")}`),{isValid:r.length===0,errors:r,warnings:i,extractedVariables:Array.from(s),missingVariables:f,unusedVariables:w}}async validateVariableListReferences(t){const e=[],r=Object.values(t).filter(i=>i.type==="list"&&i.listId).map(i=>i.listId);if(r.length>0){const i=await l.variableLists.where("id").anyOf(r).toArray(),a=new Set(i.map(n=>n.id)),s=r.filter(n=>!a.has(n));s.length>0&&e.push(`Referenced variable lists not found: ${s.join(", ")}`)}return{valid:e.length===0,errors:e}}deepFreezeVariables(t){const e={};for(const[r,i]of Object.entries(t))i.values?e[r]=Object.freeze({...i,values:Object.freeze([...i.values])}):e[r]=Object.freeze({...i});return e}deepCloneVariables(t){const e={};for(const[r,i]of Object.entries(t))i.values?e[r]={...i,values:[...i.values]}:e[r]={...i};return e}freezeUpdateData(t){t.variables&&(t.variables=Object.freeze(this.deepFreezeVariables(t.variables))),t.tags&&(t.tags=Object.freeze([...t.tags])),t.refusalWords&&(t.refusalWords=Object.freeze([...t.refusalWords]))}}const m=new x;function C(){const g=I(new Set),t=I(null),e=F(()=>g.value.size>0);function r(){t.value=null}async function i(d,y){g.value.add(d),t.value=null;try{const h=await y();return h.ok||(t.value=h.error),h}catch(h){const j=h instanceof Error?h:new Error("Command execution failed");return t.value=j,{ok:!1,error:j}}finally{g.value.delete(d)}}async function a(d){return i("create",()=>m.create(d))}async function s(d,y){return i("update",()=>m.update(d,y))}async function n(d){return i("delete",()=>m.delete(d))}async function o(d,y){return i("duplicate",()=>m.duplicate(d,y))}async function c(d,y,h){return i("linkVariable",()=>m.linkVariableList(d,y,h))}async function u(d,y){return i("unlinkVariable",()=>m.unlinkVariableList(d,y))}async function f(d,y){return i("updateReferences",()=>m.updateVariableListReferences(d,y))}async function w(d){return i("bulkCreate",()=>m.bulkCreate(d))}async function b(d){return i("bulkUpdate",()=>m.bulkUpdate(d))}async function v(d){return i("bulkDelete",()=>m.bulkDelete(d))}async function E(d){return i("import",()=>m.importTemplates(d))}async function T(d){return i("export",()=>m.exportTemplates(d))}async function O(d){return i("validate",()=>m.validateTemplateIntegrity(d))}async function L(){return i("cleanup",()=>m.cleanupInvalidReferences())}return{createTemplate:a,updateTemplate:s,deleteTemplate:n,duplicateTemplate:o,linkVariableList:c,unlinkVariableList:u,updateVariableListReferences:f,bulkCreateTemplates:w,bulkUpdateTemplates:b,bulkDeleteTemplates:v,importTemplates:E,exportTemplates:T,validateTemplateIntegrity:O,cleanupInvalidReferences:L,isExecuting:e,lastError:t,clearError:r}}export{C as u};
