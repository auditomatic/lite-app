import{i as N,t as D}from"./core-DucnQ6i4.js";var d;(function(n){n.WINDOW_RESIZED="tauri://resize",n.WINDOW_MOVED="tauri://move",n.WINDOW_CLOSE_REQUESTED="tauri://close-requested",n.WINDOW_DESTROYED="tauri://destroyed",n.WINDOW_FOCUS="tauri://focus",n.WINDOW_BLUR="tauri://blur",n.WINDOW_SCALE_FACTOR_CHANGED="tauri://scale-change",n.WINDOW_THEME_CHANGED="tauri://theme-changed",n.WINDOW_CREATED="tauri://window-created",n.WEBVIEW_CREATED="tauri://webview-created",n.DRAG_ENTER="tauri://drag-enter",n.DRAG_OVER="tauri://drag-over",n.DRAG_DROP="tauri://drag-drop",n.DRAG_LEAVE="tauri://drag-leave"})(d||(d={}));async function W(n,r){window.__TAURI_EVENT_PLUGIN_INTERNALS__.unregisterListener(n,r),await N("plugin:event|unlisten",{event:n,eventId:r})}async function E(n,r,i){var e;const a=(e=void 0)!==null&&e!==void 0?e:{kind:"Any"};return N("plugin:event|listen",{event:n,target:a,handler:D(r)}).then(t=>async()=>W(n,t))}var o;(function(n){n[n.Trace=1]="Trace",n[n.Debug=2]="Debug",n[n.Info=3]="Info",n[n.Warn=4]="Warn",n[n.Error=5]="Error"})(o||(o={}));function b(n){var r,i;if(n)if(n.startsWith("Error")){const a=(r=n.split(`
`)[3])==null?void 0:r.trim();if(!a)return;const t=/at\s+(?<functionName>.*?)\s+\((?<fileName>.*?):(?<lineNumber>\d+):(?<columnNumber>\d+)\)/,c=a.match(t);if(c){const{functionName:s,fileName:l,lineNumber:u,columnNumber:f}=c.groups;return`${s}@${l}:${u}:${f}`}else{const s=/at\s+(?<fileName>.*?):(?<lineNumber>\d+):(?<columnNumber>\d+)/,l=a.match(s);if(l){const{fileName:u,lineNumber:f,columnNumber:_}=l.groups;return`<anonymous>@${u}:${f}:${_}`}}}else return(i=n.split(`
`).map(t=>t.split("@")).filter(([t,c])=>t.length>0&&c!=="[native code]")[2])==null?void 0:i.filter(t=>t.length>0).join("@")}async function m(n,r,i){const e=b(new Error().stack),{file:a,line:t,keyValues:c}=i??{};await N("plugin:log|log",{level:n,message:r,location:e,file:a,line:t,keyValues:c})}async function I(n,r){await m(o.Error,n,r)}async function O(n,r){await m(o.Info,n,r)}async function g(n){return await E("log://log",r=>{const{level:i}=r.payload;let{message:e}=r.payload;e=e.replace(/[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g,""),n({message:e,level:i})})}async function R(){return await g(({level:n,message:r})=>{switch(n){case o.Trace:console.log(r);break;case o.Debug:console.debug(r);break;case o.Info:console.info(r);break;case o.Warn:console.warn(r);break;case o.Error:console.error(r);break;default:throw new Error(`unknown log level ${n}`)}})}export{o as LogLevel,R as attachConsole,g as attachLogger,I as error,O as info};
