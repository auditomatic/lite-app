import{i as t}from"./index-dQqVkRMY.js";import{ag as e,f as r,c as s,ai as a}from"./vendor-DCf9YP3r.js";import{l as i}from"./db-CL8uhZCz.js";import{g as n}from"./defaultData-DyqJdH2z.js";import{l as o}from"./logger.service-_k__GSpu.js";const l=new class{parseCSV(t){const e=t.split("\n").map(t=>t.trim()).filter(Boolean);if(0===e.length)return{headers:[],rows:[]};const r=this.parseCSVLine(e[0]);if(0===r.length)return{headers:[],rows:[]};const s=[];for(let a=1;a<e.length;a++){const t=this.parseCSVLine(e[a]);if(t.every(t=>!t.trim()))continue;const i={};r.forEach((e,r)=>{i[e]=t[r]||""}),s.push(i)}return{headers:r,rows:s}}parseCSVLine(t){const e=[];let r="",s=!1,a=0;for(;a<t.length;){const i=t[a];'"'===i?s&&'"'===t[a+1]?(r+='"',a+=2):(s=!s,a++):","!==i||s?(r+=i,a++):(e.push(r.trim()),r="",a++)}return e.push(r.trim()),e}validateAttributedList(t,e){const r=[],s=[];if(0===t.length)return void 0===e?{valid:!0,errors:[],attributeKeys:[]}:{isValid:!0,errors:r,warnings:s};const a=t.filter(t=>!t.value.trim());a.length>0&&r.push(`${a.length} items have empty values`);const i=t.map(t=>t.value.trim().toLowerCase()),n=i.filter((t,e)=>i.indexOf(t)!==e);if(n.length>0&&s.push(`Duplicate values found: ${[...new Set(n)].join(", ")}`),Array.isArray(e))for(const l of e){const e=t.filter(t=>!t.attributes[l]?.trim());e.length>0&&r.push(`${e.length} items missing required attribute: ${l}`)}const o=new Set;t.forEach(t=>{Object.keys(t.attributes).forEach(t=>o.add(t))});if(t.filter(t=>Array.from(o).some(e=>!(e in t.attributes))).length>0&&s.push("Some items missing optional attributes"),void 0===e){const e=this.getAttributeKeys(t),s=[],a=t.length>0?Object.keys(t[0].attributes).sort():[];return t.forEach(t=>{const e=Object.keys(t.attributes).sort();a.forEach(r=>{e.includes(r)||s.push(`Item '${t.value}' is missing attribute: ${r}`)}),e.forEach(e=>{a.includes(e)||s.push(`Item '${t.value}' has extra attribute: ${e}`)})}),{valid:0===r.length&&0===s.length,errors:[...r,...s],attributeKeys:e}}return{isValid:0===r.length,errors:r,warnings:s}}getAttributeStats(t){const e={};return t.forEach(t=>{Object.entries(t.attributes).forEach(([t,r])=>{e[t]||(e[t]=new Set),r?.trim()&&e[t].add(r.trim())})}),e}convertToAttributedList(t,e=[]){return t.map(t=>({value:t.trim(),attributes:e.reduce((t,e)=>(t[e]="",t),{})}))}parseJSON(t){try{return JSON.parse(t)}catch(e){throw new Error("Invalid JSON format")}}csvToAttributedItems(t){const e=t.headers.find(t=>"value"===t.toLowerCase()||"name"===t.toLowerCase());if(!e)throw new Error('CSV must have a "value" or "name" column');const r=t.headers.filter(t=>t!==e);return t.rows.map(t=>({value:t[e]||"",attributes:r.reduce((e,r)=>(e[r]=t[r]||"",e),{})})).filter(t=>t.value.trim())}exportToCSV(t){if(0===t.length)return"";const e=Array.from(new Set(t.flatMap(t=>Object.keys(t.attributes)))).sort(),r=[["value",...e].join(",")];return t.forEach(t=>{const s=[this.escapeCSVValue(t.value),...e.map(e=>this.escapeCSVValue(t.attributes[e]||""))];r.push(s.join(","))}),r.join("\n")}escapeCSVValue(t){return t?t.includes(",")||t.includes('"')||t.includes("\n")?`"${t.replace(/"/g,'""')}"`:t:""}async getListValues(e){const r=await t.variableLists.get(e);return r?"simple"===r.category&&r.values?r.values:"attributed"===r.category&&r.items?r.items.map(t=>t.value):[]:[]}async formatAsCSV(e){const r=await t.variableLists.get(e);return r?"simple"===r.category&&r.values?["value",...r.values].join("\n"):"attributed"===r.category&&r.items?this.exportToCSV(r.items):"":""}getAttributeKeys(t){const e=new Set;return t.forEach(t=>{t.attributes&&Object.keys(t.attributes).forEach(t=>e.add(t))}),Array.from(e).sort()}},u=e("variableLists",()=>{const e=r([]),l=r(!1),u=r(null);let c=null;const d=s(()=>e.value.filter(t=>"simple"===t.category)),v=s(()=>e.value.filter(t=>"attributed"===t.category)),f=s(()=>e.value.filter(t=>"refusal"===t.category)),m=s(()=>e.value.slice().sort((t,e)=>e.updated.getTime()-t.updated.getTime()));return{lists:e,isLoading:a(l),error:a(u),simpleLists:d,attributedLists:v,refusalLists:f,listsByDate:m,initialize:async function(){if(!c){l.value=!0,u.value=null;try{c=i(()=>t.variableLists.orderBy("updated").reverse().toArray()).subscribe({next:t=>{e.value=t,l.value=!1},error:t=>{o.error("Variable lists store subscription error",t),u.value="Failed to load variable lists",l.value=!1}})}catch(r){o.error("Failed to initialize variable lists store",r),u.value="Failed to initialize variable lists",l.value=!1}}},createList:async function(e){const r=new Date,s=n(),a={...e,id:s,created:r,updated:r};return await t.variableLists.add(a),s},updateList:async function(e,r){await t.variableLists.update(e,{...r,updated:new Date})},deleteList:async function(e){const r=(await t.designs.toArray()).filter(t=>t.variableBindings&&Object.values(t.variableBindings).some(t=>"list"===t.type&&t.listId===e));if(r.length>0){const t=r.map(t=>t.name).join(", ");throw new Error(`Cannot delete variable list - it is used in designs: ${t}`)}await t.variableLists.delete(e)},getList:async function(e){return await t.variableLists.get(e)},getAllLists:async function(){try{return await t.variableLists.toArray()}catch(e){return o.error("Failed to get all lists",e),[]}},destroy:function(){c&&(c.unsubscribe(),c=null)}}});export{u,l as v};
