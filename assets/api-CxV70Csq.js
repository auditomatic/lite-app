const e="openrouter",t="OpenRouter API",s="/api/v1/chat/completions",i={promptTokensPath:"usage.prompt_tokens",completionTokensPath:"usage.completion_tokens",totalTokensPath:"usage.total_tokens"},r=[{pattern:".*",name:"All OpenRouter Models",params:{temperature:{type:"number",description:"Creativity level (0 = predictable, 1+ = more creative and varied)",min:0,max:2,default:0,basic:!0},max_tokens:{type:"integer",description:"Maximum response length (1 token â‰ˆ 3-4 characters)",min:1,default:1024,is_output_length:!0,basic:!0},reasoning:{type:"object",description:"Model reasoning configuration",basic:!1,properties:{effort:{type:"string",description:"OpenAI-style reasoning effort setting",enum:["low","medium","high"],basic:!1}}},provider:{type:"object",description:"Provider routing preferences",basic:!0,properties:{order:{type:"array",description:'List of provider slugs to try in order (e.g. ["anthropic", "openai"])',items:{type:"string"},basic:!1},allow_fallbacks:{type:"boolean",description:"Whether to allow backup providers when the primary is unavailable",default:!1,basic:!1},require_parameters:{type:"boolean",description:"Only use providers that support all parameters in your request",default:!0,required:!0,fixed:!0,basic:!1},data_collection:{type:"string",description:"Control whether to use providers that may store data",enum:["allow","deny"],basic:!1},only:{type:"array",description:"List of provider slugs to allow for this request",items:{type:"string"},basic:!1},ignore:{type:"array",description:"List of provider slugs to skip for this request",items:{type:"string"},basic:!1},quantizations:{type:"array",description:'List of quantization levels to filter by (e.g. ["int4", "int8"])',items:{type:"string",enum:["int4","int8","fp4","fp6","fp8","fp16","bf16","fp32","unknown"]},basic:!1},sort:{type:"string",description:"Sort providers by price or throughput",enum:["price","throughput"],basic:!1},max_price:{type:"object",description:"The maximum pricing you want to pay for this request",basic:!1}}},seed:{type:"integer",description:"Seed for deterministic outputs",basic:!1},top_p:{type:"number",description:"Top-p sampling value",min:0,max:1,basic:!1},top_k:{type:"integer",description:"Top-k sampling value",min:1,basic:!1},frequency_penalty:{type:"number",description:"Frequency penalty",min:-2,max:2,basic:!1},presence_penalty:{type:"number",description:"Presence penalty",min:-2,max:2,basic:!1},repetition_penalty:{type:"number",description:"Repetition penalty",min:0,max:2,basic:!1},logit_bias:{type:"object",description:"Mapping of token IDs to bias values",basic:!1},logprobs:{type:"boolean",description:"Include log probabilities in response",basic:!1},top_logprobs:{type:"integer",description:"Number of top log probabilities to return",basic:!1},min_p:{type:"number",description:"Minimum probability threshold",min:0,max:1,basic:!1},top_a:{type:"number",description:"Alternate top sampling parameter",min:0,max:1,basic:!1},user:{type:"string",description:"A stable identifier for your end-users. Used to help detect and prevent abuse",basic:!1}}}],o={text:{id:"text",label:"Text",description:"Standard text response",parameters:{},responseTransform:{contentPath:"choices[0].message.content",fallbackPaths:["choices[0].text","message.content"],errorPath:"error.message"}}},a={promptKey:"messages",wrapPrompt:!0,messageRole:"user"},n={id:e,name:t,endpoint:s,usageExtraction:i,modelRules:r,responseModes:o,requestTransform:a};export{n as default,s as endpoint,e as id,r as modelRules,t as name,a as requestTransform,o as responseModes,i as usageExtraction};
