import{i as s}from"./index-dQqVkRMY.js";import{a,g as t,d as e}from"./defaultData-DyqJdH2z.js";import"./vendor-DCf9YP3r.js";import"./db-CL8uhZCz.js";class i{static async importDefaults(i,n){const r={};let l=0,o=0;const d=n?a.filter(s=>n.includes(s.name)):a;for(const a of d){const e=await s.variableLists.where("name").equals(a.name).first();if(e){r[a.name]=e.id;continue}const i=t(),n=new Date;await s.variableLists.add({...a,id:i,created:n,updated:n}),r[a.name]=i,l++}const c=i?e.filter(s=>i.includes(s.name)):e;for(const a of c){if(await s.designs.where("name").equals(a.name).first())continue;const e=t(),i=new Date,n=await this.processVariableBindings(a.variableBindings,r);let l=a.refusalWordsListRef;!l&&a.refusalWords&&(l=r["Standard Refusal Patterns"]),await s.designs.add({...a,id:e,variableBindings:n,refusalWordsListRef:l,created:i,updated:i}),o++}return{designs:o,lists:l}}static async processVariableBindings(a,t){const e={...a};for(const[i,n]of Object.entries(e))if("list"===n.type&&n.listName){const a=t[n.listName];if(a){const t=await s.variableLists.get(a);t&&"simple"===t.category&&t.values?e[i]={type:"direct",values:[...t.values],source:{listId:t.id,listName:t.name}}:n.listId=a}else n.listId=""}return e}static async loadDefaultsOnFirstRun(){return 0===await s.variableLists.count()&&(await this.importDefaults(),!0)}}export{i as DefaultDataService};
