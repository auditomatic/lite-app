const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-BfkoFMqp.js","assets/vue-vendor-DPw1dQYc.js","assets/ui-vendor-CcBzucUW.js","assets/utils-vendor--V4UhsOV.js","assets/index-cTUJCLSS.css"])))=>i.map(i=>d[i]);
import{a as l,l as $,d as n,k,i as R,_ as M,c as L}from"./index-BfkoFMqp.js";import{f as F}from"./utils-vendor--V4UhsOV.js";import{s as _,c as I,o as V,b as P,h as W,f as S}from"./vue-vendor-DPw1dQYc.js";function Q(){const b=performance.now();l.info(`V4_TRIAL_SWITCH: useV4Trials() composable ENTRY at ${b}`);const t=_([]),e=_(!0),a=_(null);let r=null;const i=I(()=>t.value),d=()=>{const m=performance.now();l.info(`V4_TRIAL_SWITCH: setupLiveQuery() ENTRY at ${m}`),r&&(r.unsubscribe(),r=null);const o=$(async()=>{try{return(await n.trials.orderBy("created").reverse().toArray()).filter(h=>!k(h)).map(h=>Object.freeze({...h,created:h.created instanceof Date?h.created:new Date(h.created),started:h.started?h.started instanceof Date?h.started:new Date(h.started):void 0,completed:h.completed?h.completed instanceof Date?h.completed:new Date(h.completed):void 0}))}catch(s){throw l.error("V4_TRIALS: Failed to load trials:",s),s}});r=F(o).subscribe({next:s=>{t.value=s,e.value=!1,a.value=null,`${s.length}`},error:s=>{l.error("V4_TRIALS: Query error:",s),a.value=s instanceof Error?s:new Error("Failed to load trials"),e.value=!1}})},u=I(()=>i.value.filter(m=>m.status==="running")),p=I(()=>i.value.filter(m=>m.status==="draft")),f=I(()=>i.value.filter(m=>m.status==="completed")),c=I(()=>i.value.filter(m=>m.status==="paused")),v=I(()=>i.value.filter(m=>m.status==="failed")),y=I(()=>i.value.length),T=I(()=>{const m={total:i.value.length,byStatus:{draft:0,pending:0,running:0,paused:0,completed:0,cancelled:0,failed:0},totalApiCalls:0,completedApiCalls:0,failedApiCalls:0,averageCompletionRate:0};for(const o of i.value)m.byStatus[o.status]++,o.progress&&(m.totalApiCalls+=o.progress.total,m.completedApiCalls+=o.progress.completed,m.failedApiCalls+=o.progress.failed);return m.totalApiCalls>0&&(m.averageCompletionRate=m.completedApiCalls/m.totalApiCalls*100),m}),A=async()=>{e.value=!0,a.value=null;try{const s=(await n.trials.orderBy("created").reverse().toArray()).filter(g=>!k(g)).map(g=>Object.freeze({...g,created:g.created instanceof Date?g.created:new Date(g.created),started:g.started?g.started instanceof Date?g.started:new Date(g.started):void 0,completed:g.completed?g.completed instanceof Date?g.completed:new Date(g.completed):void 0}));t.value=s,e.value=!1,`${s.length}`}catch(m){l.error("V4_TRIALS: Refresh failed:",m),a.value=m instanceof Error?m:new Error("Failed to refresh trials"),e.value=!1}};return V(()=>{const m=performance.now();l.info(`V4_TRIAL_SWITCH: useV4Trials onMounted() ENTRY at ${m}`),l.info("V4_TRIALS: Mounting trials query composable");const o=performance.now();l.info(`V4_TRIAL_SWITCH: useV4Trials calling setupLiveQuery() at ${(o-m).toFixed(1)}ms`),d();const s=performance.now();l.info(`V4_TRIAL_SWITCH: useV4Trials setupLiveQuery() completed in ${(s-o).toFixed(1)}ms`)}),P(()=>{r&&(r.unsubscribe(),r=null)}),{trials:i,loading:e,error:a,runningTrials:u,draftTrials:p,completedTrials:f,pausedTrials:c,failedTrials:v,totalTrials:y,statistics:T,refresh:A}}function U(b){const t=_(null),e=_(!0),a=_(null);let r=null,i=null;const d=I(()=>(typeof b=="object"&&b!==null?b.value:b)?t.value:null),u=f=>{const c=performance.now();if(r&&(r.unsubscribe(),r=null),!f){t.value=null,e.value=!1;return}const v=$(async()=>{const y=performance.now();`${(y-c).toFixed(1)}`;const T=await n.trials.get(f);return`${(performance.now()-y).toFixed(1)}`,T?Object.freeze({...T,created:T.created instanceof Date?T.created:new Date(T.created),started:T.started?T.started instanceof Date?T.started:new Date(T.started):void 0,completed:T.completed?T.completed instanceof Date?T.completed:new Date(T.completed):void 0}):null});r=F(v).subscribe({next:y=>{const T=performance.now();t.value=y,e.value=!1,a.value=null,y&&`${y.id}${(T-c).toFixed(1)}`},error:y=>{l.error("V4_TRIALS: Single trial query error:",y),a.value=y instanceof Error?y:new Error("Failed to load trial"),e.value=!1}})},p=async()=>{const f=typeof b=="object"&&b!==null?b.value:b;if(!f){t.value=null,e.value=!1;return}e.value=!0,a.value=null;try{const c=await n.trials.get(f);c?t.value=Object.freeze({...c,created:c.created instanceof Date?c.created:new Date(c.created),started:c.started?c.started instanceof Date?c.started:new Date(c.started):void 0,completed:c.completed?c.completed instanceof Date?c.completed:new Date(c.completed):void 0}):t.value=null,e.value=!1}catch(c){l.error("V4_TRIALS: Refresh single trial failed:",c),a.value=c instanceof Error?c:new Error("Failed to refresh trial"),e.value=!1}};return typeof b=="object"&&b!==null?V(()=>{i=W(()=>{const f=b.value;u(f)})}):V(()=>{u(b)}),P(()=>{r&&(r.unsubscribe(),r=null),i&&(i(),i=null)}),{trial:d,loading:e,error:a,refresh:p}}class O{async createTrial(t){try{const e=this.validateTrialConfig(t);if(!e.ok)return{ok:!1,error:e.error};const a=await this.createConfigurationSnapshots(t.configurations);let r=t.templateConfig;if(t.type==="template"&&r){const u=await this.createVariableSnapshots(r.variables);r={...r,variables:u,hasSnapshots:!0}}const i={id:R("trial"),name:t.name,description:t.description,type:t.type,status:"draft",configurations:a,progress:{total:0,completed:0,failed:0,cancelled:0,pending:0,running:0,networkErrors:0},created:new Date,...t.repeatCount&&t.repeatCount>1?{repeatConfig:{callsPerPrompt:t.repeatCount}}:{},...t.type==="template"&&r?{templateConfig:r}:{},...t.type==="spreadsheet"&&t.spreadsheetConfig?{spreadsheetConfig:t.spreadsheetConfig}:{}},d=await this.generateApiCalls(i,t.repeatCount||1);return i.progress.total=d.length,i.progress.pending=d.length,await n.transaction("rw",n.trials,n.apiCalls,async()=>{await n.trials.add(i),d.length>0&&await n.apiCalls.bulkAdd(d)}),`${i.id}${d.length}`,{ok:!0,value:i.id}}catch(e){return l.error("V4_TRIALS: Failed to create trial:",e),{ok:!1,error:e instanceof Error?e:new Error("Failed to create trial")}}}async updateTrial(t,e){try{return await n.transaction("rw",n.trials,async()=>{const a=await n.trials.get(t);if(!a)throw new Error(`Trial not found: ${t}`);const r={...a,...e,created:a.created};await n.trials.put(r)}),{ok:!0}}catch(a){return l.error("V4_TRIALS: Failed to update trial:",a),{ok:!1,error:a instanceof Error?a:new Error("Failed to update trial")}}}async deleteTrial(t){try{return await n.transaction("rw",n.trials,n.apiCalls,async()=>{const e=await n.trials.get(t);if(!e)throw new Error(`Trial not found: ${t}`);if(e.status==="running")throw new Error("Cannot delete running trial");await n.apiCalls.where("trialId").equals(t).delete(),await n.trials.delete(t)}),`${t}`,{ok:!0}}catch(e){return l.error("V4_TRIALS: Failed to delete trial:",e),{ok:!1,error:e instanceof Error?e:new Error("Failed to delete trial")}}}async duplicateTrial(t){try{const e=await n.trials.get(t);if(!e)return{ok:!1,error:new Error(`Source trial not found: ${t}`)};const a={name:`${e.name} (Copy)`,description:e.description,type:e.type,configurations:e.configurations.map(r=>({provider:r.provider,modelId:r.modelId,parameters:r.parameters,name:r.modelSnapshot?.displayName})),repeatCount:e.repeatCount,...e.type==="template"&&e.templateConfig?{templateConfig:e.templateConfig}:{},...e.type==="spreadsheet"&&e.spreadsheetConfig?{spreadsheetConfig:e.spreadsheetConfig}:{}};return this.createTrial(a)}catch(e){return l.error("V4_TRIALS: Failed to duplicate trial:",e),{ok:!1,error:e instanceof Error?e:new Error("Failed to duplicate trial")}}}async updatePostProcessingConfig(t,e,a=!1){try{const r=a&&e?.enabled?await M(()=>import("./index-BfkoFMqp.js").then(i=>i.D),__vite__mapDeps([0,1,2,3,4])):null;return await n.transaction("rw",n.trials,n.apiCalls,async()=>{const i=await n.trials.get(t);if(!i)throw new Error(`Trial not found: ${t}`);const d={...i,postProcessingConfig:e?{...e,refusalWords:e.refusalWords?[...e.refusalWords]:void 0,updatedAt:new Date}:void 0};if(await n.trials.put(d),a&&e?.enabled&&r){const{extractResponseContent:u}=r,p=await n.apiCalls.where("trialId").equals(t).and(f=>f.status==="completed"&&!!f.result?.content).toArray();`${p.length}`;for(const f of p){if(!f.result?.content)continue;const c=await u(f.result.content,{outputType:e.outputType,extractPattern:e.extractPattern,refusalWords:e.refusalWords,rejectRefusalWords:e.rejectRefusalWords,extractionMode:e.extractionMode,pythonCode:e.pythonCode,pythonFunctionName:e.pythonFunctionName}),v={...f.result,postParsedContent:c.parsedContent,postRefused:c.refused||!1};await n.apiCalls.update(f.id,{result:v})}}}),`${t}`,{ok:!0}}catch(r){return l.error("V4_TRIALS: Failed to update post-processing config:",r),{ok:!1,error:r instanceof Error?r:new Error("Failed to update post-processing config")}}}async updatePostParserId(t,e,a=!1){try{let r=[];if(a&&e){const{parserService:i}=await M(async()=>{const{parserService:u}=await import("./index-BfkoFMqp.js").then(p=>p.E);return{parserService:u}},__vite__mapDeps([0,1,2,3,4])),d=await n.apiCalls.where("trialId").equals(t).and(u=>u.status==="completed"&&!!u.result?.content).toArray();`${d.length}`;for(const u of d){if(!u.result?.content)continue;const p=await i.execute(u.result.content,e);p.success&&r.push({callId:u.id,result:{...u.result,postParsedContent:p.value,postRefused:p.refused||!1}})}`${r.length}`}return await n.transaction("rw",n.trials,n.apiCalls,async()=>{const i=await n.trials.get(t);if(!i)throw new Error(`Trial not found: ${t}`);const d={...i,postParserId:e||void 0,postProcessingConfig:e?void 0:i.postProcessingConfig};if(await n.trials.put(d),r.length>0){`${r.length}`;for(const{callId:u,result:p}of r)await n.apiCalls.update(u,{result:p})}}),`${t}`,{ok:!0}}catch(r){return l.error("V4_TRIALS: Failed to update post-processing parser:",r),{ok:!1,error:r instanceof Error?r:new Error("Failed to update post-processing parser")}}}async updateTrialProgress(t){try{return await n.transaction("rw",n.trials,n.apiCalls,async()=>{const e=await n.trials.get(t);if(!e)throw new Error(`Trial not found: ${t}`);const a=await n.apiCalls.where("trialId").equals(t).toArray();let r=0,i=0,d=0,u=0,p=0;for(const c of a)switch(c.status){case"completed":r++;break;case"failed":i++,c.result?.errorType==="network_error_no_response"&&p++;break;case"cancelled":d++;break;case"running":u++;break}const f=e.progress.total-r-i-d-u;e.progress={total:e.progress.total,completed:r,failed:i,cancelled:d,pending:f,running:u,networkErrors:p},r+i+d>=e.progress.total&&e.status==="running"&&(e.status="completed",e.completed=new Date),await n.trials.put(e)}),{ok:!0}}catch(e){return l.error("V4_TRIALS: Failed to update trial progress:",e),{ok:!1,error:e instanceof Error?e:new Error("Failed to update progress")}}}async generateApiCalls(t,e){return`${t.id}${t.type}`,t.type==="template"&&t.templateConfig?this.generateTemplateApiCalls(t,t.templateConfig,e):t.type==="spreadsheet"&&t.spreadsheetConfig?this.generateSpreadsheetApiCalls(t,t.spreadsheetConfig,e):t.type==="playground"?[]:(l.warn(`V4_TRIALS: Unknown trial type or missing config for trial ${t.id}`),[])}async generateTemplateApiCalls(t,e,a){if(!e)return[];const r=[];let i=0;const d=await this.generateVariableCombinations(e.variables);`${d.length}`;for(let u=0;u<a;u++)for(let p=0;p<t.configurations.length;p++)for(const f of d){const c=this.substituteVariables(e.template,f.variables),v={id:R("call"),trialId:t.id,configurationIndex:p,order:i++,variables:f.variables,variableAttributes:f.variableAttributes,variableIndices:f.variableIndices,prompt:c,status:"pending",retryCount:0,created:new Date};r.push(v)}return`${r.length}`,r}async generateSpreadsheetApiCalls(t,e,a){if(!e)return[];const r=[];let i=0;const d=await n.variableLists.get(e.datasetId);if(!d||d.category!=="tabular"||!d.tabularData?.rows)return l.warn(`V4_TRIALS: Dataset ${e.datasetId} not found or invalid`),[];for(let u=0;u<a;u++)for(const p of d.tabularData.rows){const f=this.substituteVariables(e.promptPattern,p);for(let c=0;c<t.configurations.length;c++){const v={id:R("call"),trialId:t.id,configurationIndex:c,order:i++,variables:p,prompt:f,status:"pending",retryCount:0,created:new Date};r.push(v)}}return`${r.length}`,r}async generateVariableCombinations(t){const e=Object.keys(t).sort();if(e.length===0)return[{variables:{}}];const a={};for(const u of e){const p=t[u];let f=[];const c=p;if(c.snapshot)f=c.snapshot.items.map(v=>({value:v.value,attributes:v.attributes}));else if(p.type==="value"&&p.values)f=p.values.map(v=>({value:v}));else if(p.type==="list"&&p.listId){const v=await n.variableLists.get(p.listId);v&&(v.category==="simple"&&v.values?f=v.values.map(y=>({value:y})):v.category==="attributed"&&v.items?f=v.items.map(y=>({value:y.value||y.name||String(y),attributes:y.attributes||{}})):v.category==="tabular"&&v.tabularData?.rows&&(f=v.tabularData.rows.map(y=>({value:y.name||y[Object.keys(y)[0]]||String(y)}))))}a[u]=f}const i=e.map(u=>Math.max(a[u].length,1)).reduce((u,p)=>u*p,1),d=[];for(let u=0;u<i;u++){const p={},f={},c={};let v=u;for(let T=e.length-1;T>=0;T--){const A=e[T],m=a[A];if(m.length>0){const o=v%m.length,s=m[o];p[A]=s.value,c[A]=o,s.attributes&&Object.keys(s.attributes).length>0&&(f[A]={...s.attributes}),v=Math.floor(v/m.length)}else p[A]="",c[A]=0}const y={variables:p};Object.keys(f).length>0&&(y.variableAttributes=f),Object.keys(c).length>0&&(y.variableIndices=c),d.push(y)}return d}substituteVariables(t,e){let a=t;for(const[r,i]of Object.entries(e)){const d=new RegExp(`\\{\\{\\s*${r}\\s*\\}\\}`,"g");a=a.replace(d,i)}return a}validateTrialConfig(t){if(!t.name||t.name.trim().length===0)return{ok:!1,error:new Error("Trial name is required")};if(!t.configurations||t.configurations.length===0)return{ok:!1,error:new Error("At least one model configuration is required")};for(const e of t.configurations){if(!L.getProvider(e.provider))return{ok:!1,error:new Error(`Provider not found: ${e.provider}`)};const r=L.validateParameters(e.provider,e.modelId,e.parameters);if(!r.valid)return{ok:!1,error:new Error(`Invalid parameters: ${r.errors?.join(", ")||"Validation failed"}`)}}if(t.type==="template"){if(!t.templateConfig||!t.templateConfig.template)return{ok:!1,error:new Error("Template is required for template trials")}}else if(t.type==="spreadsheet"&&(!t.spreadsheetConfig||!t.spreadsheetConfig.promptPattern))return{ok:!1,error:new Error("Prompt pattern is required for spreadsheet trials")};return{ok:!0}}async createConfigurationSnapshots(t){const e=[];for(const a of t){const r=L.getProvider(a.provider);if(!r)throw new Error(`Provider not found: ${a.provider}`);const d=(await n.models.where("provider").equals(a.provider).toArray()).find(p=>p.modelId===a.modelId),u={provider:a.provider,modelId:a.modelId,parameters:a.parameters,providerSnapshot:r,modelSnapshot:d||{id:`${a.provider}:${a.modelId}`,provider:a.provider,modelId:a.modelId,displayName:a.name||a.modelId,enabled:!0,source:"user"}};e.push(u)}return e}async createVariableSnapshots(t){const e={};for(const[a,r]of Object.entries(t)){const i={...r};if(r.type==="value"&&r.values)i.snapshot={source:{type:"direct",snapshotDate:new Date},items:r.values.map(d=>({value:d}))};else if(r.type==="list"&&r.listId){const d=await n.variableLists.get(r.listId);d&&(i.snapshot=await this.snapshotVariableList(d))}e[a]=i}return e}async snapshotVariableList(t){const e={source:{type:t.category,listId:t.id,listName:t.name,snapshotDate:new Date},items:[]};switch(t.category){case"simple":case"refusal":e.items=t.values?.map(a=>({value:a}))||[];break;case"attributed":e.items=t.items?.map(a=>({value:a.value,attributes:{...a.attributes}}))||[],e.attributeKeys=[...t.attributeKeys||[]];break;case"tabular":t.tabularData?.rows&&(e.items=t.tabularData.rows.map(a=>({value:a.name||a[Object.keys(a)[0]]||""})));break}return e}}const D=new O,B=Object.freeze(Object.defineProperty({__proto__:null,V4TrialOperations:O,v4TrialOperations:D},Symbol.toStringTag,{value:"Module"}));function G(){const b=S(!1),t=S(!1),e=S(!1),a=S(!1),r=S(null),i=async o=>{b.value=!0,r.value=null;try{const s=await D.createTrial(o);return s.ok?s.value:(r.value=s.error||new Error("Failed to create trial"),l.error("V4_TRIAL_COMMANDS: Create trial failed:",s.error)),s}finally{b.value=!1}},d=async(o,s,g)=>{try{const w=await n.template_prompts.get(o);if(!w)return{ok:!1,error:new Error(`Template not found: ${o}`)};const h={name:g||`${w.name} - ${new Date().toLocaleString()}`,description:w.description,type:"template",configurations:s,repeatCount:1,templateConfig:{template:w.template,templateId:w.id,templateName:w.name,variables:w.variables||{},outputType:w.outputType,extractPattern:w.extractPattern,refusalWords:w.refusalWords?[...w.refusalWords]:void 0,rejectRefusalWords:w.rejectRefusalWords}};return i(h)}catch(w){return l.error("V4_TRIAL_COMMANDS: Failed to create trial from template:",w),{ok:!1,error:w instanceof Error?w:new Error("Failed to create trial from template")}}},u=async(o,s,g,w)=>{try{const h=await n.variableLists.get(s);if(!h||h.category!=="tabular")return{ok:!1,error:new Error(`Dataset not found or not tabular: ${s}`)};const C={name:w||`Spreadsheet Trial - ${new Date().toLocaleString()}`,type:"spreadsheet",configurations:g,spreadsheetConfig:{promptPattern:o,datasetId:s}};return i(C)}catch(h){return l.error("V4_TRIAL_COMMANDS: Failed to create spreadsheet trial:",h),{ok:!1,error:h instanceof Error?h:new Error("Failed to create spreadsheet trial")}}},p=async(o,s)=>{t.value=!0,r.value=null;try{const g=await D.updateTrial(o,s);return g.ok||(r.value=g.error||new Error("Failed to update trial"),l.error("V4_TRIAL_COMMANDS: Update trial failed:",g.error)),g}finally{t.value=!1}},f=async(o,s)=>p(o,{status:s}),c=async o=>{e.value=!0,r.value=null;try{const s=await D.deleteTrial(o);return s.ok||(r.value=s.error||new Error("Failed to delete trial"),l.error("V4_TRIAL_COMMANDS: Delete trial failed:",s.error)),s}finally{e.value=!1}},v=async o=>{e.value=!0,r.value=null;try{return o.length,await n.transaction("rw",n.trials,n.apiCalls,async()=>{for(const s of o){const g=await n.trials.get(s);g&&g.status!=="running"&&(await n.apiCalls.where("trialId").equals(s).delete(),await n.trials.delete(s))}}),{ok:!0}}catch(s){return l.error("V4_TRIAL_COMMANDS: Failed to delete multiple trials:",s),r.value=s instanceof Error?s:new Error("Failed to delete trials"),{ok:!1,error:r.value}}finally{e.value=!1}},y=async o=>{a.value=!0,r.value=null;try{const s=await D.duplicateTrial(o);return s.ok?s.value:(r.value=s.error||new Error("Failed to duplicate trial"),l.error("V4_TRIAL_COMMANDS: Duplicate trial failed:",s.error)),s}finally{a.value=!1}},T=async o=>{try{let s=1;if(o.type==="template"&&o.templateConfig){const w=o.templateConfig.variables;for(const[,h]of Object.entries(w))if(h.type==="value"&&h.values)s*=h.values.length;else if(h.type==="list"&&h.listId){const C=await n.variableLists.get(h.listId);C&&(C.category==="simple"&&C.values?s*=C.values.length:C.category==="attributed"&&C.items?s*=C.items.length:C.category==="tabular"&&C.tabularData?.rows&&(s*=C.tabularData.rows.length))}}else if(o.type==="spreadsheet"&&o.spreadsheetConfig){const w=await n.variableLists.get(o.spreadsheetConfig.datasetId);w&&w.category==="tabular"&&w.tabularData?.rows&&(s=w.tabularData.rows.length)}return s*o.configurations.length*(o.repeatCount||1)}catch(s){return l.error("V4_TRIAL_COMMANDS: Failed to calculate API call count:",s),0}};return{createTrial:i,createTrialFromTemplate:d,createTrialFromSpreadsheet:u,updateTrial:p,updateTrialStatus:f,deleteTrial:c,deleteMultipleTrials:v,duplicateTrial:y,generateApiCallCount:T,estimateTrialCost:async o=>{try{const s=await T(o);let g=0;for(const w of o.configurations){const C=(await n.models.where("provider").equals(w.provider).toArray()).find(E=>E.modelId===w.modelId);if(C?.capabilities){const x=w.parameters?.max_tokens||w.parameters?.maxTokens||256,N=(C.capabilities.inputCostPerToken||0)*150,j=(C.capabilities.outputCostPerToken||0)*x;g+=(N+j)*s/o.configurations.length}}return g}catch(s){return l.error("V4_TRIAL_COMMANDS: Failed to estimate cost:",s),0}},validateTrialConfig:o=>!o.name||o.name.trim().length===0?{ok:!1,error:new Error("Trial name is required")}:!o.configurations||o.configurations.length===0?{ok:!1,error:new Error("At least one model configuration is required")}:o.type==="template"&&!o.templateConfig?{ok:!1,error:new Error("Template configuration is required for template trials")}:o.type==="spreadsheet"&&!o.spreadsheetConfig?{ok:!1,error:new Error("Spreadsheet configuration is required for spreadsheet trials")}:{ok:!0},isCreating:b,isUpdating:t,isDeleting:e,isDuplicating:a,lastError:r}}export{G as a,U as b,B as c,Q as u,D as v};
