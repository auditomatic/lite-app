import{ag as e,f as o,c as a}from"./vendor-BxfGckcK.js";import{l}from"./db-COX2g2xv.js";import{d}from"./index-JX8mTFJZ.js";const t=e("models",()=>{const e=o([]),t=o(!0),n=o({litellm:"idle",ollama:"idle",openrouter:"idle"});let s=null;const i=a(()=>e.value),r=a(()=>{const o={};for(const a of e.value)o[a.provider]||(o[a.provider]=[]),o[a.provider].push(a);for(const e in o)o[e].sort((e,o)=>e.enabled!==o.enabled?e.enabled?-1:1:e.displayName.localeCompare(o.displayName));return o}),u=a(()=>e.value.filter(e=>e.enabled)),c=a(()=>e=>r.value[e]||[]),m=a(()=>(o,a)=>e.value.find(e=>e.id===`${o}:${a}`));async function f(e,o){await d.models.update(e,{...o,modifiedAt:new Date})}return async function(){await d.open(),s=l(()=>d.models.toArray()).subscribe({next:o=>{e.value=o,t.value=!1},error:e=>{console.error("Models subscription error:",e),t.value=!1}})}(),{models:a(()=>e.value),isLoading:a(()=>t.value),loadingStatus:a(()=>n.value),allModels:i,modelsByProvider:r,enabledModels:u,getModelsForProvider:c,getModel:m,addModel:async function(e){const o=new Date,a={...e,discoveredAt:o,modifiedAt:o};await d.models.put(a)},addModels:async function(e){const o=new Date,a=e.map(e=>({...e,discoveredAt:o,modifiedAt:o}));await d.models.bulkPut(a)},updateModel:f,toggleModel:async function(e,o){await f(e,{enabled:o})},toggleProvider:async function(o,a){const l=e.value.filter(e=>e.provider===o).map(e=>({key:e.id,changes:{enabled:a,modifiedAt:new Date}}));await d.models.bulkUpdate(l)},deleteModel:async function(e){const o=await d.models.get(e);if(!o||"user"!==o.source)throw new Error("Can only delete user-created models");await d.models.delete(e)},clearModels:async function(){await d.models.clear()},setLoadingStatus:function(e,o){n.value[e]=o},setIsLoading:function(e){t.value=e},cleanup:function(){s?.unsubscribe()}}});export{t as u};
