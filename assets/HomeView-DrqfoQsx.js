import{d as a,c as s,f as e,o as t,a3 as l,Y as i,a4 as d,G as r,_ as c,u as o,k as n,F as v,a5 as u,a6 as f,W as p}from"./vendor-DCf9YP3r.js";import{u as m}from"./designs-db-D4FnITPe.js";import{u as b}from"./variables-db-BMGRJyAs.js";import{u as g}from"./trials-db-V2RTzc2h.js";import{u as h}from"./models-db-3pG6m6YE.js";import{u as y}from"./settings-db-CBuX-T7S.js";import{s as k}from"./storage-calculation.service-CLY4-4t3.js";import{A as w,F as C,D as j,E as A,B as P,a as L,S,b as T,_ as E}from"./index-dQqVkRMY.js";import"./db-CL8uhZCz.js";import"./defaultData-DyqJdH2z.js";import"./registry-DiQCbBcP.js";import"./logger.service-_k__GSpu.js";import"./mock-provider.service-BAPeV6CB.js";const x={class:"home-view"},R={class:"welcome-section"},D={class:"welcome-content"},M={class:"welcome-title"},K={class:"version-text"},O={class:"status-section"},V={class:"status-grid"},B={class:"status-card"},I={class:"status-value"},_={class:"status-card"},z={class:"status-value"},F={class:"status-card"},G={class:"status-value"},W={class:"status-card"},N={class:"status-value"},U={class:"dashboard-grid"},$={class:"card-content"},H={class:"recent-items"},J={class:"card-content"},Y={class:"recent-items"},q={class:"card-content"},Q={class:"recent-items"},X={class:"card-content"},Z={class:"recent-items"},aa={class:"card-content"},sa={class:"provider-summary"},ea={class:"card-content"},ta={class:"settings-summary"},la={class:"card-content"},ia={class:"debug-summary"},da=E(a({__name:"HomeView",setup(a){const E=f(),da=m(),ra=b(),ca=g(),oa=h(),na=y(),va=w.short.startsWith("v")?w.short:`v${w.short}`,ua=s(()=>da.designs.length),fa=s(()=>ra.lists.length),pa=s(()=>ca.trials.length),ma=s(()=>ca.trials.filter(a=>"completed"===a.status).length),ba=s(()=>oa.allModels.length),ga=s(()=>{let a=0;return na.apiKeyGroups&&(a=na.apiKeyGroups.filter(a=>a.hasKey).length),(na.isProviderEnabled("ollama-chat")||na.isProviderEnabled("ollama-generate"))&&a++,a}),ha=s(()=>da.designs.slice(0,3)),ya=s(()=>ra.lists.slice(0,3)),ka=s(()=>ca.trials.slice(0,3)),wa=s(()=>ca.trials.filter(a=>"running"===a.status||"pending"===a.status).length),Ca=s(()=>ca.trials.reduce((a,s)=>a+(s.completedTasks||0),0)),ja=e({formatted:"0 B"}),Aa=s(()=>ja.value.formatted),Pa=s(()=>Object.keys(oa.modelsByProvider).map(a=>({id:a,name:a.split("-").map(a=>a.charAt(0).toUpperCase()+a.slice(1)).join(" "),modelCount:oa.modelsByProvider[a].length}))),La=s(()=>{const a=[];na.apiKeyGroups&&na.apiKeyGroups.forEach(s=>{a.push({provider:s.name,status:s.hasKey?"Configured":"Not configured"})});const s=na.isProviderEnabled("ollama-chat")||na.isProviderEnabled("ollama-generate");return a.push({provider:"Ollama",status:s?"Enabled":"Disabled"}),a}),Sa=s(()=>""),Ta=s(()=>0),Ea=a=>{E.push(`/${a}`)};return t(async()=>{da.initialize(),ra.initialize(),ca.initialize();try{ja.value=await k.getStorageInfo()}catch(a){console.warn("Failed to get storage info:",a)}}),(a,s)=>(p(),l("div",x,[i("div",R,[i("div",D,[i("h1",M,[s[7]||(s[7]=r("Auditomatic Lite — ")),i("span",K,c(o(va)),1)]),s[8]||(s[8]=d('<p class="welcome-subtitle" data-v-c86bf66f> A powerful browser-based tool for systematic testing of Large Language Models </p><div class="features-grid" data-v-c86bf66f><div class="feature-card warning-feature" data-v-c86bf66f><div class="feature-icon" data-v-c86bf66f>🌐</div><h3 data-v-c86bf66f>Browser Compatibility</h3><p data-v-c86bf66f>Safari is not well supported. Chrome and Firefox are preferred for best performance and compatibility.</p></div><div class="feature-card warning-feature" data-v-c86bf66f><div class="feature-icon" data-v-c86bf66f>⚠️</div><h3 data-v-c86bf66f>Experimental Beta</h3><p data-v-c86bf66f>Features may change at any time. Regularly export all data to files (CSV/Excel/JSON)</p></div><div class="feature-card" data-v-c86bf66f><div class="feature-icon" data-v-c86bf66f>💾</div><h3 data-v-c86bf66f>Local Storage</h3><p data-v-c86bf66f>All data stored locally in your browser - no cloud uploads, complete privacy</p></div><div class="feature-card" data-v-c86bf66f><div class="feature-icon" data-v-c86bf66f>🤖</div><h3 data-v-c86bf66f>Multi-Provider</h3><p data-v-c86bf66f>Test across OpenAI, Anthropic, OpenRouter, Ollama, and more providers</p></div><div class="feature-card" data-v-c86bf66f><div class="feature-icon" data-v-c86bf66f>📝</div><h3 data-v-c86bf66f>Design Templates</h3><p data-v-c86bf66f>Create prompt templates with variables to test different scenarios systematically</p></div><div class="feature-card" data-v-c86bf66f><div class="feature-icon" data-v-c86bf66f>🔄</div><h3 data-v-c86bf66f>Variable Lists</h3><p data-v-c86bf66f>Define lists of test values that get substituted into your prompts automatically</p></div><div class="feature-card" data-v-c86bf66f><div class="feature-icon" data-v-c86bf66f>🧪</div><h3 data-v-c86bf66f>Run Trials</h3><p data-v-c86bf66f>Test multiple models and configurations with your variable combinations in parallel</p></div><div class="feature-card" data-v-c86bf66f><div class="feature-icon" data-v-c86bf66f>📊</div><h3 data-v-c86bf66f>Analyze Results</h3><p data-v-c86bf66f>View live progress, compare responses, and export data for further analysis</p></div><div class="feature-card" data-v-c86bf66f><div class="feature-icon" data-v-c86bf66f>💰</div><h3 data-v-c86bf66f>Cost Tracking</h3><p data-v-c86bf66f>Real-time cost estimation and tracking across all providers to monitor your API spending</p></div><div class="feature-card warning-feature" data-v-c86bf66f><div class="feature-icon" data-v-c86bf66f>⚠️</div><h3 data-v-c86bf66f>Cost Warning</h3><p data-v-c86bf66f>Cost estimates may not be accurate. Response lengths vary significantly and can cause unexpected charges. Monitor your provider billing closely.</p></div></div><div class="workflow-hint" data-v-c86bf66f><strong data-v-c86bf66f>Typical Workflow:</strong> Set API Keys → Enable Models → (Optional: Create Variables) → Design Prompts → Configure Trial → Run &amp; Analyze </div>',3))])]),i("div",O,[s[13]||(s[13]=i("h2",null,"System Status",-1)),i("div",V,[i("div",B,[s[9]||(s[9]=i("span",{class:"status-label"},"LLM Providers",-1)),i("span",I,c(ga.value)+" configured",1)]),i("div",_,[s[10]||(s[10]=i("span",{class:"status-label"},"Active Trials",-1)),i("span",z,c(wa.value),1)]),i("div",F,[s[11]||(s[11]=i("span",{class:"status-label"},"Total Results",-1)),i("span",G,c(Ca.value),1)]),i("div",W,[s[12]||(s[12]=i("span",{class:"status-label"},"Storage Used",-1)),i("span",N,c(Aa.value),1)])])]),i("div",U,[i("div",{class:"dashboard-card",onClick:s[0]||(s[0]=a=>Ea("designs"))},[i("h3",null,[n(o(C)),s[14]||(s[14]=r(" Designs"))]),i("div",$,[i("p",null,c(ua.value)+" prompt templates",1),i("div",H,[(p(!0),l(v,null,u(ha.value,a=>(p(),l("div",{key:a.id,class:"recent-item"},c(a.name),1))),128))])])]),i("div",{class:"dashboard-card",onClick:s[1]||(s[1]=a=>Ea("variables"))},[i("h3",null,[n(o(j)),s[15]||(s[15]=r(" Variables"))]),i("div",J,[i("p",null,c(fa.value)+" variable lists",1),i("div",Y,[(p(!0),l(v,null,u(ya.value,a=>(p(),l("div",{key:a.id,class:"recent-item"},c(a.name)+" ("+c(a.items?.length||a.values?.length||0)+" items) ",1))),128))])])]),i("div",{class:"dashboard-card",onClick:s[2]||(s[2]=a=>Ea("trials"))},[i("h3",null,[n(o(A)),s[16]||(s[16]=r(" Trials"))]),i("div",q,[i("p",null,c(pa.value)+" test configurations",1),i("div",Q,[(p(!0),l(v,null,u(ka.value,a=>(p(),l("div",{key:a.id,class:"recent-item"},c(a.name),1))),128))])])]),i("div",{class:"dashboard-card",onClick:s[3]||(s[3]=a=>Ea("results"))},[i("h3",null,[n(o(P)),s[17]||(s[17]=r(" Results"))]),i("div",X,[i("p",null,c(ma.value)+" completed runs",1),i("div",Z,[(p(!0),l(v,null,u(ka.value.filter(a=>"completed"===a.status),a=>(p(),l("div",{key:a.id,class:"recent-item"},c(a.name)+" - Completed ",1))),128))])])]),i("div",{class:"dashboard-card",onClick:s[4]||(s[4]=a=>Ea("models"))},[i("h3",null,[n(o(L)),s[18]||(s[18]=r(" Models"))]),i("div",aa,[i("p",null,c(ba.value)+" LLM models available",1),i("div",sa,[(p(!0),l(v,null,u(Pa.value,a=>(p(),l("div",{key:a.id,class:"provider-item"},c(a.name)+": "+c(a.modelCount)+" models ",1))),128))])])]),i("div",{class:"dashboard-card",onClick:s[5]||(s[5]=a=>Ea("settings"))},[i("h3",null,[n(o(S)),s[19]||(s[19]=r(" Settings"))]),i("div",ea,[s[20]||(s[20]=i("p",null,"Configure API keys and endpoints",-1)),i("div",ta,[(p(!0),l(v,null,u(La.value,a=>(p(),l("div",{key:a.provider,class:"setting-item"},c(a.provider)+": "+c(a.status),1))),128))])])]),i("div",{class:"dashboard-card",onClick:s[6]||(s[6]=a=>Ea("debug"))},[i("h3",null,[n(o(T)),s[21]||(s[21]=r(" Debug"))]),i("div",la,[s[22]||(s[22]=i("p",null,"View system logs and diagnostics",-1)),i("div",ia,[i("div",null,"Last error: "+c(Sa.value||"None"),1),i("div",null,"Log entries: "+c(Ta.value),1)])])])])]))}}),[["__scopeId","data-v-c86bf66f"]]);export{da as default};
