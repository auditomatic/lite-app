var e=Object.defineProperty,s=(s,i,o)=>((s,i,o)=>i in s?e(s,i,{enumerable:!0,configurable:!0,writable:!0,value:o}):s[i]=o)(s,"symbol"!=typeof i?i+"":i,o);const i=new class{constructor(){s(this,"isDev",!1),s(this,"isProd",!0),s(this,"appName","Auditomatic")}debug(e,s){this.isDev&&this.appName}info(e,s){this.isDev&&this.appName}warn(e,s){console.warn(`[${this.appName}:WARN]`,e,s||"")}error(e,s,i){console.error(`[${this.appName}:ERROR]`,e,s,i||""),this.isProd&&s&&this.sendToErrorTracking(e,s,i)}group(e){this.isDev&&console.group(`[${this.appName}] ${e}`)}groupEnd(){this.isDev&&console.groupEnd()}time(e){this.isDev&&console.time(`[${this.appName}:PERF] ${e}`)}timeEnd(e){this.isDev&&console.timeEnd(`[${this.appName}:PERF] ${e}`)}sendToErrorTracking(e,s,i){}};export{i as l};
