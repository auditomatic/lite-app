name: Cleanup Old Assets

on:
  workflow_run:
    workflows: ["pages-build-deployment"]
    types:
      - completed
  workflow_dispatch:  # Allow manual trigger

jobs:
  cleanup:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Need full history

      - name: Clean old asset files
        run: |
          echo "Cleaning old asset files..."
          
          # Keep only the latest version of each asset type
          # Vite generates files with hashes like: name-HASH.js
          
          cd assets
          
          # For each base filename, keep only the newest version
          for pattern in \
            "GenericModelSelectorModalV3-*.js" \
            "HomeViewV3-*.js" \
            "ModelsViewV3-*.js" \
            "OllamaModelManagerV3-*.js" \
            "PlaygroundViewV3-*.js" \
            "SettingsView-*.js" \
            "SpreadsheetView-*.js" \
            "TemplateEditorViewV3C-*.js" \
            "TemplatesViewV3-*.js" \
            "TrialCreationV3-*.js" \
            "TrialsViewV3-*.js" \
            "VariableListEditorViewV3-*.js" \
            "VariableListsViewV3-*.js" \
            "WizardView-*.js" \
            "WizardView-*.css" \
            "index-*.js" \
            "index-*.css" \
            "ollama-fetch-*.js" \
            "python-bundle-management-*.js" \
            "trial-bundle.service-*.js" \
            "useCostEstimation-*.js" \
            "useV4Models-*.js" \
            "useV4ProviderParameters-*.js" \
            "useV4TemplateCommands-*.js" \
            "useV4Templates-*.js" \
            "useV4TrialCommands-*.js" \
            "useV4VariableListCommands-*.js" \
            "useV4VariableLists-*.js" \
            "wizard-flow-*.js" \
            "csp-reporter-*.js" \
            "api-*.js" \
            "chat-*.js"
          do
            # Get all files matching the pattern
            files=$(ls $pattern 2>/dev/null | sort)
            
            if [ -n "$files" ]; then
              # Count how many files match
              count=$(echo "$files" | wc -l)
              
              if [ "$count" -gt 1 ]; then
                # Keep the last one (newest), delete the rest
                echo "$files" | head -n -1 | while read file; do
                  echo "Removing old asset: $file"
                  rm -f "$file"
                done
              fi
            fi
          done
          
          cd ..
          
          # Count removed files
          deleted=$(git status --porcelain | grep "^ D" | wc -l)
          echo "Removed $deleted old asset files"

      - name: Commit cleanup
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Check if there are changes to commit
          if [ -n "$(git status --porcelain)" ]; then
            git add -A
            git commit -m "chore: clean up old asset files

          Automated cleanup to remove outdated versioned assets.
          Keeps only the latest version of each asset file."
            git push
            echo "✅ Cleanup complete and pushed"
          else
            echo "✅ No old assets to clean up"
          fi